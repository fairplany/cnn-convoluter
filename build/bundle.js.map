{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/smelte/src/components/Icon/Icon.svelte","../../node_modules/smelte/src/utils/classes.js","../../node_modules/smelte/src/components/Ripple/ripple.js","../../node_modules/smelte/src/components/Button/Button.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/smelte/src/components/Util/Scrim.svelte","../../node_modules/smelte/src/components/Util/index.js","../../node_modules/smelte/src/components/Dialog/Dialog.svelte","../../node_modules/svelte-waypoint/src/Waypoint.svelte","../../node_modules/smelte/src/components/Image/Image.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/smelte/src/components/Ripple/Ripple.svelte","../../node_modules/smelte/src/components/Slider/Slider.svelte","../../node_modules/smelte/src/components/Snackbar/Snackbar.svelte","../../node_modules/smelte/src/components/Switch/Switch.svelte","../../node_modules/smelte/src/components/Tooltip/Tooltip.svelte","../../src/math.js","../../src/components/Container.svelte","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/components/settings/SettingsOneDim.svelte","../../src/components/settings/SettingsDimension.svelte","../../src/components/settings/Switch.svelte","../../src/settings.js","../../src/components/Settings.svelte","../../src/components/drawings/Box2d.svelte","../../src/components/drawings/MatrixDrawer2d.svelte","../../src/components/drawings/Box3d.svelte","../../src/components/drawings/MatrixDrawer3d.svelte","../../src/components/drawings/MatrixDrawer.svelte","../../src/components/Kernel.svelte","../../src/components/Input.svelte","../../src/components/Output.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\n\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl {$$props.class} duration-200 ease-in\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n","const noDepth = [\"white\", \"black\", \"transparent\"];\n\nfunction getClass(prop, color, depth, defaultDepth) {\n  if (noDepth.includes(color)) {\n    return `${prop}-${color}`;\n  }\n  return `${prop}-${color}-${depth || defaultDepth} `;\n}\n\nexport default function utils(color, defaultDepth = 500) {\n  return {\n    bg: depth => getClass(\"bg\", color, depth, defaultDepth),\n    border: depth => getClass(\"border\", color, depth, defaultDepth),\n    txt: depth => getClass(\"text\", color, depth, defaultDepth),\n    caret: depth => getClass(\"caret\", color, depth, defaultDepth)\n  };\n}\n\nexport class ClassBuilder {\n  constructor(classes, defaultClasses) {\n    this.defaults =\n      (typeof classes === \"function\" ? classes(defaultClasses) : classes) ||\n      defaultClasses;\n\n    this.classes = this.defaults;\n  }\n\n  flush() {\n    this.classes = this.defaults;\n\n    return this;\n  }\n\n  extend(...fns) {\n    return this;\n  }\n\n  get() {\n    return this.classes;\n  }\n\n  replace(classes, cond = true) {\n    if (cond && classes) {\n      this.classes = Object.keys(classes).reduce(\n        (acc, from) => acc.replace(new RegExp(from, \"g\"), classes[from]),\n        this.classes\n      );\n    }\n\n    return this;\n  }\n\n  remove(classes, cond = true) {\n    if (cond && classes) {\n      this.classes = classes\n        .split(\" \")\n        .reduce(\n          (acc, cur) => acc.replace(new RegExp(cur, \"g\"), \"\"),\n          this.classes\n        );\n    }\n\n    return this;\n  }\n\n  add(className, cond = true, defaultValue) {\n    if (!cond || !className) return this;\n\n    switch (typeof className) {\n      case \"string\":\n      default:\n        this.classes += ` ${className} `;\n        return this;\n      case \"function\":\n        this.classes += ` ${className(defaultValue || this.classes)} `;\n        return this;\n    }\n  }\n}\n\nconst defaultReserved = [\"class\", \"add\", \"remove\", \"replace\", \"value\"];\n\nexport function filterProps(reserved, props) {\n  const r = [...reserved, ...defaultReserved];\n\n  return Object.keys(props).reduce(\n    (acc, cur) =>\n      cur.includes(\"$$\") || cur.includes(\"Class\") || r.includes(cur)\n        ? acc\n        : { ...acc, [cur]: props[cur] },\n    {}\n  );\n}\n","// Thanks Lagden! https://svelte.dev/repl/61d9178d2b9944f2aa2bfe31612ab09f?version=3.6.7\nfunction ripple(color, centered) {\n  return function(event) {\n    const target = event.currentTarget;\n    const circle = document.createElement(\"span\");\n    const d = Math.max(target.clientWidth, target.clientHeight);\n\n    const removeCircle = () => {\n      circle.remove();\n      circle.removeEventListener(\"animationend\", removeCircle);\n    };\n\n    circle.addEventListener(\"animationend\", removeCircle);\n    circle.style.width = circle.style.height = `${d}px`;\n    const rect = target.getBoundingClientRect();\n\n    if (centered) {\n      circle.classList.add(\n        \"absolute\",\n        \"top-0\",\n        \"left-0\",\n        \"ripple-centered\",\n        `bg-${color}-transDark`\n      );\n    } else {\n      circle.style.left = `${event.clientX - rect.left - d / 2}px`;\n      circle.style.top = `${event.clientY - rect.top - d / 2}px`;\n\n      circle.classList.add(\"ripple-normal\", `bg-${color}-trans`);\n    }\n\n    circle.classList.add(\"ripple\");\n\n    target.appendChild(circle);\n  };\n}\n\nexport default function r(color = \"primary\", centered = false) {\n  return function(node) {\n    const onMouseDown = ripple(color, centered);\n    node.addEventListener(\"mousedown\", onMouseDown);\n\n    return {\n      onDestroy: () => node.removeEventListener(\"mousedown\", onMouseDown),\n    };\n  };\n}\n","<script>\n  import Icon from \"../Icon\";\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n  import createRipple from \"../Ripple/ripple.js\";\n\n\n\n  export let value = false;\n  export let outlined = false;\n  export let text = false;\n  export let block = false;\n  export let disabled = false;\n  export let icon = null;\n  export let small = false;\n  export let light = false;\n  export let dark = false;\n  export let flat = false;\n  export let iconClass = \"\";\n  export let color = \"primary\";\n  export let href = null;\n  export let fab = false;\n\n  export let remove = \"\";\n  export let add = \"\";\n  export let replace = {};\n\n  const classesDefault = 'py-2 px-4 uppercase text-sm font-medium relative overflow-hidden';\n  const basicDefault = 'text-white duration-200 ease-in';\n  const outlinedDefault = 'bg-transparent border border-solid';\n  const textDefault = 'bg-transparent border-none px-4 hover:bg-transparent';\n  const iconDefault = 'p-4 flex items-center select-none';\n  const fabDefault = 'hover:bg-transparent';\n  const smallDefault = 'pt-1 pb-1 pl-2 pr-2 text-xs';\n  const disabledDefault = 'bg-gray-300 text-gray-500 dark:bg-dark-400 elevation-none pointer-events-none hover:bg-gray-300 cursor-default';\n  const elevationDefault = 'hover:elevation-5 elevation-3';\n\n  export let classes = classesDefault;\n  export let basicClasses = basicDefault;\n  export let outlinedClasses = outlinedDefault;\n  export let textClasses = textDefault;\n  export let iconClasses = iconDefault;\n  export let fabClasses = fabDefault;\n  export let smallClasses = smallDefault;\n  export let disabledClasses = disabledDefault;\n  export let elevationClasses = elevationDefault;\n\n  fab = fab || (text && icon);\n  const basic = !outlined && !text && !fab;\n  const elevation = (basic || icon) && !disabled && !flat && !text;\n\n  let Classes = i => i;\n  let iClasses = i => i;\n  let shade = 0;\n\n  $: {\n    shade = light ? 200 : 0;\n    shade = dark ? -400 : shade;\n  }\n  $: normal = 500 - shade;\n  $: lighter = 400 - shade;\n\n  const {\n    bg,\n    border,\n    txt,\n  } = utils(color);\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  let iconCb;\n\n  if (icon) {\n    iconCb = new ClassBuilder(iconClass);\n  }\n\n  $: classes = cb\n      .flush()\n      .add(basicClasses, basic, basicDefault)\n      .add(`${bg(normal)} hover:${bg(lighter)}`, basic)\n      .add(elevationClasses, elevation, elevationDefault)\n      .add(outlinedClasses, outlined, outlinedDefault)\n      .add(\n        `${border(lighter)} ${txt(normal)} hover:${bg(\"trans\")} dark-hover:${bg(\"transDark\")}`,\n        outlined)\n      .add(`${txt(lighter)}`, text)\n      .add(textClasses, text, textDefault)\n      .add(iconClasses, icon, iconDefault)\n      .remove(\"py-2\", icon)\n      .remove(txt(lighter), fab)\n      .add(disabledClasses, disabled, disabledDefault)\n      .add(smallClasses, small, smallDefault)\n      .add(\"flex items-center justify-center h-8 w-8\", small && icon)\n      .add(\"border-solid\", outlined)\n      .add(\"rounded-full\", icon)\n      .add(\"w-full\", block)\n      .add(\"rounded\", basic || outlined || text)\n      .add(\"button\", !icon)\n      .add(fabClasses, fab, fabDefault)\n      .add(`hover:${bg(\"transLight\")}`, fab)\n      .add($$props.class)\n      .remove(remove)\n      .replace(replace)\n      .add(add)\n      .get();\n\n  $: if (iconCb) {\n    iClasses = iconCb.flush().add(txt(), fab && !iconClass).get();\n  }\n\n  const ripple = createRipple((text || fab || outlined) ? color : \"white\");\n\n  const props = filterProps([\n    'outlined',\n    'text',\n    'color',\n    'block',\n    'disabled',\n    'icon',\n    'small',\n    'light',\n    'dark',\n    'flat',\n    'add',\n    'remove',\n    'replace',\n  ], $$props);\n</script>\n\n\n{#if href}\n  <a\n    {href}\n    {...props}\n  >\n    <button\n      use:ripple\n      class={classes}\n      {...props}\n      {disabled}\n      on:click={() => (value = !value)}\n      on:click\n      on:mouseover\n      on:*\n    >\n      {#if icon}\n        <Icon class={iClasses} {small}>{icon}</Icon>\n      {/if}\n      <slot />\n    </button>\n  </a>\n{:else}\n  <button\n    use:ripple\n    class={classes}\n    {...props}\n    {disabled}\n    on:click={() => (value = !value)}\n    on:click\n    on:mouseover\n    on:*\n  >\n    {#if icon}\n      <Icon class={iClasses} {small}>{icon}</Icon>\n    {/if}\n    <slot />\n  </button>\n{/if}\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { fade } from \"svelte/transition\";\n  import { quadOut, quadIn } from \"svelte/easing\";\n\n  export let opacity = 0.5;\n  export let inProps = { duration: 200, easing: quadIn };\n  export let outProps = { duration: 200, easing: quadOut };\n</script>\n\n<div\n  class=\"bg-black fixed top-0 left-0 z-10 w-full h-full\"\n  style=\"opacity: {opacity}\"\n  in:fade={inProps}\n  out:fade={outProps}\n  on:click />\n","import scrim from \"./Scrim.svelte\";\nimport spacer from \"./Spacer.svelte\";\n\nexport const Scrim = scrim;\nexport const Spacer = spacer;\n\nexport default {\n  Scrim,\n  Spacer\n};\n","<script>\n  import { scale } from \"svelte/transition\";\n  import { onMount } from \"svelte\";\n  import { quadIn } from \"svelte/easing\";\n  import { Scrim } from \"../Util\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"items-center z-50 rounded bg-white dark:bg-dark-400 p-4 elevation-4\";\n  const titleClassesDefault = \"text-lg font-bold pb-4\";\n  const actionsClassesDefault = \"flex w-full justify-end pt-4\";\n\n  export let value;\n  export let classes = classesDefault;\n  export let titleClasses = titleClassesDefault;\n  export let actionsClasses = actionsClassesDefault;\n  export let opacity = 0.5;\n  export let persistent = false;\n\n  export let transitionProps = { duration: 150, easing: quadIn, delay: 150 };\n\n\n\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  const tcb = new ClassBuilder(titleClasses, titleClassesDefault);\n  const acb = new ClassBuilder(actionsClasses, actionsClassesDefault);\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  $: t = tcb\n    .flush()\n    .add(titleClasses, true, actionsClassesDefault)\n    .get();\n\n  $: a = acb\n    .flush()\n    .add(actionsClasses, true, actionsClassesDefault)\n    .get();\n</script>\n\n{#if value}\n  <div class=\"fixed w-full h-full top-0 left-0 z-30\">\n    <Scrim {opacity} on:click={() => !persistent && (value = false)} />\n    <div class=\"h-full w-full absolute flex items-center justify-center\">\n      <div\n        in:scale={transitionProps}\n        class={c}>\n        <div class={t}>\n          <slot name=\"title\" />\n        </div>\n        <slot />\n        <div class={a}>\n          <slot name=\"actions\" />\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n","<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n","<script>\n  import Waypoint from \"svelte-waypoint\";\n  import { fade } from \"svelte/transition\";\n\n  export let alt = \"\";\n  export let width = \"\";\n  export let height = \"\";\n  export let src = \"\";\n  export let thumbnail = \"\";\n\n\n\n  let loaded = false;\n  let loading = false;\n\n  function load() {\n    const img = new Image();\n    img.src = src;\n    loading = true;\n\n    img.onload = () => {\n      loading = false;\n      loaded = true;\n    };\n  }\n</script>\n\n<Waypoint class={$$props.class} once on:enter={load} style=\"height: {height}px\" offset=\"0\">\n  {#if loaded}\n    <img class={$$props.class} {src} {alt} {width} {height} />\n  {:else if thumbnail}\n    <img class={$$props.class} src={thumbnail} {alt} {width} {height} />\n  {:else if loading}\n    <slot name=\"loading\" />\n  {/if}\n</Waypoint>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script>\n  export let color = \"primary\";\n  export let noHover = false;\n  import createRipple from \"../Ripple/ripple.js\";\n\n  $: ripple = createRipple(color, true);\n  $: hoverClass = `hover:bg-${color}-transLight`;\n</script>\n\n<style>\n  .ripple {\n    position: absolute !important;\n  }\n</style>\n\n<span\n  use:ripple\n  class=\"z-40 {$$props.class} p-2 rounded-full flex items-center justify-center top-0 left-0 {noHover ? \"\" : hoverClass}\">\n  <slot />\n</span>\n","<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  import Ripple from \"../Ripple\";\n\n  export let value = 0;\n  export let label = \"\";\n  export let color = \"primary\";\n  export let disabled = false;\n  export let min = 0;\n  export let max = 100;\n  export let step = null;\n\n  const classesDefault = `bg-${color}-50 w-full rounded cursor-pointer`;\n\n  export let classes = classesDefault;\n\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  const getColor = c => getComputedStyle(document.documentElement).getPropertyValue(c);\n\n  let style;\n  $: {\n    let c1 = getColor(`--color-${color}-500`);\n    let c2 = getColor(`--color-${color}-200`);\n    style = disabled\n    ? \"\"\n    : `background: linear-gradient(to right, ${c1} 0%, ${c1} ${value}%, ${c2} ${value}%, ${c2} 100%); --bg: ${c1}; --bg-focus: ${c1}`;\n  }\n\n  function applyColor(node) {\n    if (typeof window === \"undefined\") return false;\n\n    let c = getColor(`--color-${color}-500`);\n    node.style.setProperty('--bg', c);\n    node.style.setProperty('--bg-focus', c);\n  }\n\n</script>\n\n<label>{label}</label>\n<input\n  use:applyColor\n  type=\"range\"\n  class={c}\n  {min}\n  {max}\n  {step}\n  {disabled}\n  bind:value\n  on:change\n  style={style}\n>\n","<script context=\"module\">\n  import { writable } from \"svelte/store\";\n\n  const queue = writable([]);\n  let running = false;\n</script>\n\n<script>\n  import { fade, scale } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import Button from \"../Button\";\n  import { Spacer } from \"../Util\";\n  import utils, { ClassBuilder } from \"../../utils/classes.js\";\n\n  export let value = false;\n  export let timeout = 2000;\n  export let inProps = { duration: 100, easing: quadIn };\n  export let outProps = { duration: 100, easing: quadOut, delay: 150 };\n  export let color = \"gray\";\n  export let text = \"white\";\n  export let top = false;\n  export let bottom = true;\n  export let right = false;\n  export let left = false;\n  export let noAction = true;\n  export let hash = false;\n\n  const dispatch = createEventDispatcher();\n\n  const classesDefault = `pointer-events-auto flex absolute py-2 px-4 z-30 mb-4 content-between mx-auto\n      rounded items-center elevation-2 h-12`;\n  const wrapperDefault = \"fixed w-full h-full flex items-center justify-center pointer-events-none\";\n\n  export let classes = wrapperDefault;\n\n  const cb = new ClassBuilder($$props.class, classesDefault);\n  const wrapperCb = new ClassBuilder(classes, wrapperDefault);\n\n  let wClasses = i => i;\n  let tm;\n  let node;\n\n  let bg = () => {};\n\n  $: {\n    const u = utils(color || \"gray\");\n    bg = u.bg;\n  }\n\n  $: {\n    hash = hash || (value ? btoa(`${value}${new Date().valueOf()}`) : null);\n    value = value;\n  }\n\n  $: toggler = () => toggle(value, hash);\n\n  $: if (value) {\n    queue.update(u => [...u, toggler]);\n  }\n\n  $: if (!running && value && $queue.length) {\n    $queue.shift()();\n  }\n\n  $: if (!value) clearTimeout(tm);\n\n  function toggle(h, id) {\n    if (value === false && running === false) {\n      return;\n    }\n    hash = running = value = id;\n\n    if (!timeout) return;\n\n    tm = setTimeout(() => {\n      value = running = hash = false;\n      dispatch(\"finish\");\n\n      if ($queue.length) {\n        $queue.shift()();\n      }\n    }, timeout);\n  }\n\n  $: c = cb\n      .flush()\n      .add(bg(800), color)\n      .add(\"right-0 mr-2\", right)\n      .add(\"top-0 mt-2\", top)\n      .add(\"left-0 ml-2\", left)\n      .add(\"bottom-0\", bottom)\n      .add(\"snackbar\", !noAction)\n      .get();\n\n  // for some reason it doesn't get updated otherwise\n  $: if (node) node.classList = c;\n\n  wClasses = wrapperCb\n    .flush()\n    .add(`text-${text}`)\n    .get();\n</script>\n\n<style>\n  .snackbar {\n    min-width: 344px;\n  }\n</style>\n\n{#if value && (running === hash)}\n  <div\n    class=\"fixed w-full h-full top-0 left-0 z-30 pointer-events-none\"\n  >\n    <div class={wClasses}>\n      <div\n        bind:this={node}\n        in:scale={inProps}\n        out:fade={outProps}\n        on:click={() => value = false}>\n        <slot />\n        {#if !noAction}\n          <Spacer />\n          <slot name=\"action\">\n            {#if !timeout}\n              <Button text on:click={() => value = false}>Close</Button>\n            {/if}\n          </slot>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n","<script>\n  import Ripple from \"../Ripple\";\n\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = `inline-flex items-center mb-2 cursor-pointer z-10`;\n  const trackClassesDefault = \"relative w-10 h-auto z-0 rounded-full overflow-visible flex items-center justify-center\";\n  const thumbClassesDefault = \"rounded-full p-2 w-5 h-5 absolute elevation-3 duration-100\";\n  const labelClassesDefault = \"pl-2 cursor-pointer\";\n\n  export let value = false;\n  export let label = \"\";\n  export let color = \"primary\";\n  export let disabled = false;\n  export let trackClasses = trackClassesDefault;\n  export let thumbClasses = thumbClassesDefault;\n  export let labelClasses = labelClassesDefault;\n\n\n  export let classes = classesDefault;\n\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  const trcb = new ClassBuilder(trackClasses, trackClassesDefault);\n  const thcb = new ClassBuilder(thumbClasses, thumbClassesDefault);\n  const lcb = new ClassBuilder(labelClasses, labelClassesDefault);\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n  $: tr = trcb\n    .flush()\n    .add(\"bg-gray-700\", !value)\n    .add(`bg-${color}-200`, value)\n    .add(trackClasses, true, trackClassesDefault)\n    .get();\n  $: th = thcb\n    .flush()\n    .add(thumbClasses, true, thumbClassesDefault)\n    .add(\"bg-white left-0\", !value)\n    .add(`bg-${color}-400`, value)\n    .get();\n  $: l = lcb\n    .flush()\n    .add(labelClasses, true, labelClassesDefault)\n    .add(\"text-gray-500\", disabled)\n    .add(\"text-gray-700\", !disabled)\n    .get();\n\n  function check() {\n    if (disabled) return;\n\n    value = !value;\n  }\n</script>\n\n<div class={c} on:click={check}>\n  <input bind:value class=\"hidden\" type=\"checkbox\" on:change />\n  <div class={tr}>\n    <div class=\"w-full h-full absolute\" />\n    <Ripple color={value && !disabled ? color : 'gray'} noHover>\n      <div\n        class={th}\n        style={value ? 'left: 1.25rem' : \"\"} />\n    </Ripple>\n  </div>\n  <label aria-hidden=\"true\" class={l}>\n    {label}\n  </label>\n</div>\n","<script>\n  import { scale, fade } from \"svelte/transition\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"tooltip whitespace-no-wrap text-xs absolute mt-2 bg-gray-600 text-gray-50 rounded md:px-2 md:py-2 py-4 px-3 z-30\";\n\n  export let classes = classesDefault;\n\n\n  export let show = false;\n\n  export let timeout = null;\n  export let delayHide = 100;\n  export let delayShow = 100;\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  function showTooltip() {\n    if (show) return;\n\n    show = true;\n\n    if (!timeout) return;\n\n    timeout = setTimeout(() => {\n      show = false;\n    }, timeout);\n  }\n\n  function hideTooltip() {\n    if (!show) return;\n\n    show = false;\n    clearTimeout(timeout);\n  }\n\n  function debounce(func, wait, immediate) {\n    let timeout;\n    return function() {\n      let context = this,\n        args = arguments;\n      let later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      let callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n</script>\n\n<style>\n.tooltip {\n  left: 50%;\n  transform: translateX(-50%);\n}\n</style>\n\n<div class=\"relative inline-block\">\n  <div\n    on:mouseenter={debounce(showTooltip, delayShow)}\n    on:mouseleave={debounce(hideTooltip, delayHide)}\n    on:mouseenter\n    on:mouseleave\n    on:mouseover\n    on:mouseout\n  >\n    <slot name=\"activator\" />\n  </div>\n\n  {#if show}\n    <div\n      in:scale={{ duration: 150 }}\n      out:scale={{ duration: 150, delay: 100 }}\n      class={c}\n    >\n      <slot />\n    </div>\n  {/if}\n</div>\n","/**\n * All the math needed for cnn-convoluter\n * */\n\n// product of an array\nexport const prod = array => array.reduce((x, y) => x*y, 1);\nconst sum = array => array.reduce((x, y) => x+y, 0);\nconst mean = array => sum(array) / array.length;\n\n// a range of numbers\nconst range = len => [...Array(len).keys()];\n\n// random number between min and max (included)\nconst randInt = (min, max) => Math.floor((Math.random() * (max - min + 1) + min));\n\n// incremental index to coordinates\n// incr: 0-based\nexport const incrToCoords = (incr, size) => {\n    // using byte-operation?\n    const coords = [];\n    incr += 1;\n    incr = incr % prod(size);\n\n    let rest = incr;\n    for (let i = 0; i < size.length; i++) {\n        if (i === size.length - 1) {\n            coords.push(rest);\n        } else {\n            const restSize = prod(size.slice(i + 1));\n            coords.push(Math.floor(rest / restSize));\n            rest = rest % restSize;\n        }\n    }\n\n    return coords;\n};\n\nconst sizeCheck = (size) => {\n    if (!(size instanceof Array)) {\n        size = [size];\n    }\n    size = size.filter(s => s !== undefined);\n    if (size.length > 3) {\n        throw \"Only support <= 3d\";\n    }\n    return size;\n};\n\nexport class Matrix {\n\n    static preset(size, n=undefined) {\n        size = sizeCheck(size);\n\n        const num = () => typeof(n) === 'function' ? n() : n;\n        let data;\n        if (size.length === 1) {\n            data = Array.from({length: size[0]}, num);\n        } else if (size.length === 2) {\n            data = Array.from({length: size[0]}, () => Array.from(\n                {length: size[1]}, num\n            ));\n        } else {\n            data = Array.from({length: size[0]}, () => Array.from(\n                {length: size[1]}, () => Array.from(\n                    {length: size[2]}, num\n                )\n            ));\n        }\n        return new Matrix(data);\n    }\n\n    static random(size, min=0, max=9) {\n        return Matrix.preset(size, () => randInt(min, max));\n    }\n\n    static zeros(size) {\n        return Matrix.preset(size, 0);\n    }\n\n    static ones(size) {\n        return Matrix.preset(size, 1);\n    }\n\n    static create(data) {\n        return new Matrix(data);\n    }\n\n    static fromString(strdata) {\n        let ret;\n        if (strdata.includes(\"\\n---\\n\")) {\n            const splitdata = strdata.split(\"\\n---\\n\");\n            ret = splitdata.map(line => line.split(\"\\n\").filter(\n                line => !!line.trim()\n            ).map(line => line.split(/\\s+/).map(\n                d => {\n                    d = parseInt(d);\n                    if (isNaN(d)) {\n                        throw \"Only integers are allowed\";\n                    }\n                    return d;\n                }\n            )));\n            return new Matrix(ret);\n        } else {\n            ret = strdata.split(\"\\n\").filter(d => !!d.trim()).map(\n                line => line.split(/\\s+/).map(\n                    d => {\n                        d = parseInt(d);\n                        if (isNaN(d)) {\n                            throw \"Only integers are allowed\";\n                        }\n                        return d;\n                    }\n                )\n            );\n            return new Matrix(ret);\n        }\n    }\n\n    constructor(data) {\n        this.data = data;\n        this.size = [];\n        let elem = data;\n        while (elem instanceof Array) {\n            this.size.push(elem.length);\n            elem = elem[0];\n        }\n    }\n\n    first() {\n        let ret = this.data;\n        while (ret instanceof Array) {\n            ret = ret[0];\n        }\n        return ret;\n    }\n\n    get(coords) {\n        if (coords.length !== this.size.length) {\n            throw `Coordinate dimensionality mismatch, expect ${this.size.length}D, got ${coords.length}D.`;\n        }\n        coords = coords.map((coord, i) => {\n            if (!(coord instanceof Array))\n                coord = [coord];\n            if (coord[0] >= this.size[i])\n                throw `Coordinate out of bounds: ${coord[0]} (expect < ${this.size[i]})`;\n            return coord;\n        });\n        return this.subset(coords).first();\n    }\n\n    set(coords, data) {\n        if (coords.length !== this.size.length) {\n            throw `Coordinate dimensionality mismatch, expect ${this.size.length}D, got ${coords.length}D.`;\n        }\n        coords = coords.map((coord, i) => {\n            if (!(coord instanceof Array))\n                coord = [coord];\n            if (coord[0] >= this.size[i])\n                throw `Coordinate out of bounds: ${coord[0]} (expect < ${this.size[i]})`;\n            return coord;\n        });\n\n        if (!(data instanceof Array) && !(data instanceof Matrix)) {\n            data = Matrix.create([data]);\n        } else if (!(data instanceof Matrix)) {\n            data = Matrix.create([data]);\n        }\n        data.reshape(Array(coords.length).fill(1), true);\n\n        this.replace(coords, data, true);\n        return this;\n    }\n\n    subset(indexes) {\n        if (indexes.length < this.size.length) {\n            throw `Dimension mismatch in subset, expect ${this.size.length}, got ${indexes.length}`;\n        }\n        indexes = indexes.slice(indexes.length - this.size.length);\n        indexes = indexes.map(i => i instanceof Array ? i : [i]);\n\n        let data;\n        if (this.size.length === 1) {\n            data = this.data.filter((_, i) => indexes[0].includes(i));\n        } else if (this.size.length === 2) {\n            data = this.data.filter((_, i) => indexes[0].includes(i)).map(\n                dat => dat.filter((_, j) => indexes[1].includes(j))\n            );\n        } else {\n            data = this.data.filter((_, i) => indexes[0].includes(i)).map(\n                dat => dat.filter((_, j) => indexes[1].includes(j)).map(\n                    da => da.filter((_, k) => indexes[2].includes(k))\n                )\n            );\n        }\n\n        return new Matrix(data);\n    }\n\n    replace(indexes, data, inplace=true) {\n        // console.trace();\n        if (indexes.length < this.size.length) {\n            throw `Dimensionality mismatch, expect ${this.size.length}, got ${indexes.length}`;\n        }\n        indexes = indexes.slice(indexes.length - this.size.length);\n        indexes = indexes.map(i => i instanceof Array ? i : [i]);\n\n        if (data instanceof Matrix) {\n            data = data.data;\n        }\n\n        const mdata = Matrix.create(data);\n        if (indexes.map(i => i.length).toString() !== mdata.size.toString()) {\n            throw `Dimension mismatch in replace, expect ${indexes.map(i => i.length)}, got ${mdata.size}`;\n        }\n        let newdata = inplace ? this.data : JSON.parse(JSON.stringify(this.data));\n\n        if (this.size.length === 1) {\n            indexes[0].forEach((idx, i) => {\n                if (idx >= this.size[0])\n                    throw `Index out of bound: ${idx} (expect < ${this.size[0]}) at dim 0.`\n                newdata[idx] = data[i];\n            });\n        } else if (this.size.length === 2) {\n            indexes[0].forEach((idx1, i1) => {\n                if (idx1 >= this.size[0])\n                    throw `Index out of bound: ${idx1} (expect < ${this.size[0]}) at dim 0.`\n                indexes[1].forEach((idx2, i2) => {\n                    if (idx2 >= this.size[1])\n                        throw `Index out of bound: ${idx2} (expect < ${this.size[1]}) at dim 1.`\n                    newdata[idx1][idx2] = data[i1][i2];\n                })\n            });\n        } else {\n            indexes[0].forEach((idx1, i1) => {\n                if (idx1 >= this.size[0])\n                    throw `Index out of bound: ${idx1} (expect < ${this.size[0]}) at dim 0.`\n                indexes[1].forEach((idx2, i2) => {\n                    if (idx2 >= this.size[1])\n                        throw `Index out of bound: ${idx2} (expect < ${this.size[1]}) at dim 1.`\n                    indexes[2].forEach((idx3, i3) => {\n                        if (idx3 >= this.size[2])\n                            throw `Index out of bound: ${idx3} (expect < ${this.size[2]}) at dim 2.`\n                        newdata[idx1][idx2][idx3] = data[i1][i2][i3];\n                    })\n                })\n            });\n        }\n        if (inplace) {\n            return this;\n        }\n        return new Matrix(newdata);\n    }\n\n    pad(padding, type='zero') {\n        if (this.size.length !== padding.length) {\n            throw `Dimension mismatch in pad, expect ${this.size.length}, got ${padding.length}`;\n        }\n\n        const newsize = this.size.map((s, i) => s + padding[i] * 2);\n        const indexes = newsize.map((idx, i) => range(idx).slice(\n            padding[i], idx - padding[i]\n        ));\n        const ret = Matrix.zeros(newsize);\n        ret.replace(indexes, this.data, true);\n\n        return ret;\n    }\n\n    unpad(padding) {\n        if (this.size.length !== padding.length) {\n            throw `Dimension mismatch in unpad, expect ${this.size.length}, got ${padding.length}`;\n        }\n        const indexes = this.size.map((idx, i) => range(idx).slice(\n            padding[i], idx - padding[i]\n        ));\n\n        return this.subset(indexes);\n    }\n\n    resize(size, fill='zero', inplace=true) {\n        size = sizeCheck(size);\n\n        if (size.length !== this.size.length) {\n            throw `Should only resize at the same dimensionality (expect ${this.size.length}, got ${size.length}).`;\n        }\n\n        let ret;\n        if (fill === 'zero') {\n            ret = Matrix.zeros(size);\n        } else { // random\n            ret = Matrix.random(size, fill.min, fill.max);\n        }\n\n        const replaceSize = size.map((s, i) => range(Math.min(s, this.size[i])));\n        ret.replace(replaceSize, this.subset(replaceSize), inplace=true);\n        if (inplace) {\n            this.data = ret.data;\n            this.size = ret.size;\n            return this\n        }\n        return ret;\n    }\n\n    reshape(shape, inplace=true) {\n        if (prod(this.size) !== prod(shape)) {\n            throw `Unequal total length, expect ${prod(this.size)}, got ${prod(shape)}`;\n        }\n\n        let data = this.flatten();\n        if (shape.length === 2) {\n            data = range(shape[0]).map(i => data.slice(i * shape[1], (i+1) * shape[1]));\n        } else if (shape.length === 3) {\n            data = range(shape[0] * shape[1]).map(\n                i => data.slice(i * shape[2], (i+1) * shape[2])\n            );\n            data = range(shape[0]).map(i => data.slice(i * shape[1], (i+1) * shape[1]));\n        }\n\n        if (inplace) {\n            this.data = data;\n            this.size = shape;\n            return this;\n        }\n        return new Matrix(data);\n    }\n\n    dilate(dilation) {\n        if (dilation.length !== this.size.length) {\n            throw `Dimensionality mismatch, expect ${this.size.length}, got ${dilation.length}`;\n        }\n        const dsize = this.size.map((s, i) => dilation[i] * (s-1) + 1);\n        const ret = Matrix.zeros(dsize);\n        const replaceIndexes = this.size.map((size, i) => range(size).map(s => s * dilation[i]));\n        return ret.replace(replaceIndexes, this.data, false);\n    }\n\n    stringify() {\n        if (this.size.length === 1) {\n            return this.data.join(\" \");\n        }\n        if (this.size.length === 2) {\n            return this.data.map(d => d.join(\" \")).join(\"\\n\");\n        }\n        return this.data.map(line => line.map(d => d.join(\" \")).join(\"\\n\")).join(\"\\n---\\n\");\n    }\n\n    mulsum(other) {\n        if (!other instanceof Matrix) {\n            throw `Must mulsum a Matrix, got ${typeof(other)} instead.`;\n        }\n        if (this.size.toString() != other.size.toString()) {\n            throw `Size mismatch, expect ${this.size}, got ${other.size}.`;\n        }\n        let ret = 0;\n        for (let i = 0; i < prod(this.size); i++) {\n            const coords = incrToCoords(i, this.size);\n            let elem1 = this.data;\n            let elem2 = other.data;\n            for (let coord of coords) {\n                elem1 = elem1[coord];\n                elem2 = elem2[coord];\n            }\n            ret += elem1 * elem2;\n        }\n        return ret;\n    }\n\n    forEach(callFunc) {\n        if (this.size.length === 1) {\n            for (let x of Array(this.size[0]).keys()) {\n                callFunc(this.data[x], x);\n            }\n        } else if (this.size.length === 2) {\n            for (let x of Array(this.size[0]).keys()) {\n                for (let y of Array(this.size[1]).keys()) {\n                    callFunc(this.data[x][y], x, y);\n                }\n            }\n        } else {\n            for (let x of Array(this.size[0]).keys()) {\n                for (let y of Array(this.size[1]).keys()) {\n                    for (let z of Array(this.size[2]).keys()) {\n                        callFunc(this.data[x][y][z], x, y, z);\n                    }\n                }\n            }\n        }\n    }\n\n    map(callFunc) {\n        const ret = this.copy();\n        if (this.size.length === 1) {\n            for (let x of Array(this.size[0]).keys()) {\n                ret.data[x] = callFunc(this.data[x], x);\n            }\n        } else if (this.size.length === 2) {\n            for (let x of Array(this.size[0]).keys()) {\n                for (let y of Array(this.size[1]).keys()) {\n                    ret.data[x][y] = callFunc(this.data[x][y], x, y);\n                }\n            }\n        } else {\n            for (let x of Array(this.size[0]).keys()) {\n                for (let y of Array(this.size[1]).keys()) {\n                    for (let z of Array(this.size[2]).keys()) {\n                        ret.data[x][y][z] = callFunc(this.data[x][y][z], x, y, z);\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n\n    conv(padding, kernel, dilation, stride) {\n        // expecting a result where we have input coord <=> output coord mappings\n        // as well as the mulsum number\n        if (!(kernel instanceof Matrix))\n            kernel = Matrix.create(kernel);\n\n        if (kernel.size.length !== this.size.length)\n            throw `Dimensionality mismatch, input data is ${this.size.length}D, but kernel is ${kernel}.size.length}D.`;\n\n        if (stride.length !== this.size.length)\n            throw `Stride dimensionality mismatch, expect ${this.size.length}, got ${stride.length}`;\n\n        return new Convolution(this, padding, kernel, dilation, stride);\n    }\n\n    flatten() {\n        // return this.data.flat(2);\n        return [].concat.apply([], [].concat.apply([], this.data));\n    }\n\n    min() {\n        if (this.size.length === 1)\n            return Math.min(...this.data);\n        if (this.size.length === 2)\n            return Math.min(...this.data.map(d => Math.min(...d)));\n        return Math.min(...this.data.map(d2 => Math.min(...d2.map(d => Math.min(...d)))));\n    }\n\n    max() {\n        if (this.size.length === 1)\n            return Math.max(...this.data);\n        if (this.size.length === 2)\n            return Math.max(...this.data.map(d => Math.max(...d)));\n        return Math.max(...this.data.map(d2 => Math.max(...d2.map(d => Math.max(...d)))));\n    }\n\n    mean() {\n        return mean(this.flatten());\n    }\n\n    copy() {\n        return new Matrix(JSON.parse(JSON.stringify(this.data)));\n    }\n\n    equals(other) {\n        if (!(other instanceof Matrix))\n            return false;\n        return JSON.stringify(this.data) === JSON.stringify(other.data);\n    }\n\n}\n\nclass Convolution {\n    // a convoluted object, that enables queries from either input\n    // or output coordinates, together with the results\n    constructor(data, padding, kernel, dilation, stride) {\n        this.data = data.pad(padding); // in + 2*padding\n        this.padding = padding;\n        this.kernel = kernel.dilate(dilation); // dilation * (kernel - 1) + 1\n        this.dilation = dilation;\n        this.stride = stride;\n        // see: https://pytorch.org/docs/master/generated/torch.nn.Conv1d.html\n        // out = Math.floor(  (in + 2*padding - (dilation * (kernel - 1) + 1)) / stride + 1  )\n        const outSize = this.data.size.map((s, i) => Math.floor( (s - this.kernel.size[i]) / this.stride[i] + 1 ));\n        // output => Matrix([<results>])\n        this.output = Matrix.zeros(outSize);\n        this._convolute();\n    }\n\n    _convolute() {\n        this.output = this.output.map((_, ...coords) => {\n            const inblock = this.inCoordsToBlockIndexes(this.outCoordsToIn(coords));\n            return this.data.subset(inblock).mulsum(this.kernel);\n        });\n    }\n\n    inCoordsToOut(coords) {\n        // convert input coordinates to output coordinates\n        return coords.map((coord, i) =>\n            Math.floor(Math.min(coord, this.data.size[i] - this.kernel.size[i]) / this.stride[i])\n        )\n    }\n\n    outCoordsToIn(coords) {\n        return coords.map((coord, i) => coord * this.stride[i]);\n    }\n\n    inCoordsToBlockIndexes(coords, withAll=true) {\n        // turn input start coordinates to indexes of the blocks which\n        // are able to subset the input data to convolve.\n        const inStarts = this.outCoordsToIn(this.inCoordsToOut(coords));\n        if (withAll) {\n            return this.kernel.size.map((ks, i) =>\n                range(ks).map(k => k + inStarts[i])\n            );\n        } else {\n            // return only cells that are involved in calculation\n            // without dilated cells\n            return this.kernel.size.map((ks, i) =>\n                range(Math.ceil(ks/this.dilation[i])).map(k => k * this.dilation[i] + inStarts[i])\n            );\n        }\n    }\n}\n\n//// tests\n/**\nclass Test {\n    constructor() {\n        this.index = 0;\n        this.total = 0;\n        this.passed = 0;\n        this.group = 'Ungrouped';\n    }\n\n    groupStart(group, resetIndex=true) {\n        this.group = group;\n        if (resetIndex) this.index = 0;\n    }\n\n    groupEnd(resetIndex=true) {\n        this.group = 'Ungrouped';\n        if (resetIndex) this.index = 0;\n    }\n\n    done() {\n        console.log('-----------------------')\n        console.log(`TOTAL: ${this.total}, PASSED: ${this.passed}, FAILED: ${this.total - this.passed}.`)\n    }\n\n    logPass(mark, msg) {\n        this.passed ++;\n        mark = !!mark ? `: ${mark}` : '';\n        msg = !!msg ? `: ${msg}` : '';\n        console.info(`v PASSED: ${this.group}-${this.index}${mark}${msg}`);\n    }\n\n    logFail(mark, msg) {\n        mark = !!mark ? `: ${mark}` : '';\n        msg = !!msg ? `: ${msg}` : '';\n        console.error(`x FAILED: ${this.group}-${this.index}${mark}${msg}`);\n    }\n\n    assertEqual(a, b, mark) {\n        this.total ++;\n        this.index ++;\n        a === b ? this.logPass(mark) : this.logFail(mark, `${JSON.stringify(a)} !== ${JSON.stringify(b)}`);\n    }\n\n    assertArrayEqual(a, b, mark) {\n        this.total ++;\n        this.index ++;\n        JSON.stringify(a) === JSON.stringify(b) ?\n            this.logPass(mark) :\n            this.logFail(mark, `${JSON.stringify(a)} !== ${JSON.stringify(b)}`);\n    }\n\n    assertIncludes(a, b, mark) {\n        this.total ++;\n        this.index ++;\n        a.includes(b) ? this.logPass(mark) : this.logFail(mark, `!${JSON.stringify(a)}.includes(${JSON.stringify(b)})`);\n    }\n\n    assertThrow(callable, error, mark) {\n        this.total ++;\n        this.index ++;\n        let fail = true;\n        try{\n            callable();\n        } catch(e) {\n            if (e.match(error)) {\n                fail = false;\n                this.logPass(mark);\n            }\n        }\n        if (fail) {\n            this.logFail(mark, `No error with ${error} thrown.`);\n        }\n    }\n\n    assertTrue(cond, mark) {\n        this.total ++;\n        this.index ++;\n        cond ? this.logPass(mark) : this.logFail(mark, `${cond} is not true`);\n    }\n}\n\nconst test = new Test();\n\ntest.groupStart('prod');\ntest.assertEqual(prod([1,2,3]), 6);\ntest.assertEqual(prod([1]), 1);\ntest.assertEqual(prod([0,1,2]), 0);\n\ntest.groupStart('sum');\ntest.assertEqual(sum([1,2,3]), 6);\ntest.assertEqual(sum([1]), 1);\ntest.assertEqual(sum([0,1,2]), 3);\n\ntest.groupStart('mean');\ntest.assertEqual(mean([1,2,3]), 2);\ntest.assertEqual(mean([1]), 1);\ntest.assertEqual(mean([0,1,2]), 1);\ntest.assertEqual(mean([0,1,2,3]), 1.5);\n\ntest.groupStart('range');\ntest.assertArrayEqual(range(4), [0,1,2,3]);\ntest.assertArrayEqual(range(0), []);\n\ntest.groupStart('randInt');\nlet ri = randInt(0, 0);\ntest.assertEqual(ri, 0);\nri = randInt(0, 0);\ntest.assertEqual(ri, 0);\nri = randInt(0, 0);\ntest.assertEqual(ri, 0);\nri = randInt(0, 1);\ntest.assertIncludes([0, 1], ri);\nri = randInt(0, 1);\ntest.assertIncludes([0, 1], ri);\nri = randInt(0, 1);\ntest.assertIncludes([0, 1], ri);\n\ntest.groupStart('incrToCoords');\ntest.assertArrayEqual(incrToCoords(0, [1]), [0], 'zero-incr');\ntest.assertArrayEqual(incrToCoords(8, [8]), [1], 'dim-equal');\ntest.assertArrayEqual(incrToCoords(9, [8]), [2], 'dim-greater');\ntest.assertArrayEqual(incrToCoords(9, [1, 8]), [0, 2], 'dim-greater-2d');\ntest.assertArrayEqual(incrToCoords(9, [2, 8]), [1, 2], 'dim-greater-more');\n\ntest.groupStart('sizeCheck');\ntest.assertArrayEqual(sizeCheck(1), [1]);\ntest.assertArrayEqual(sizeCheck([2,3,undefined]), [2,3]);\ntest.assertThrow(() => sizeCheck([1,2,3,4]), /Only support/);\ntest.assertArrayEqual(sizeCheck([1,2,3]), [1,2,3]);\n\ntest.groupStart('Matrix-preset');\ntest.assertArrayEqual(Matrix.preset(1, 1).data, [1]);\ntest.assertArrayEqual(Matrix.preset(1, 1).size, [1]);\ntest.assertArrayEqual(Matrix.preset([1,2], ()=>9).data, [[9, 9]]);\ntest.assertArrayEqual(Matrix.preset([1,2,3], 1).data, [[[1,1,1], [1,1,1]]]);\n\ntest.groupStart('Matrix-random');\ntest.assertArrayEqual(Matrix.random([1], 0, 0).data, [0]);\ntest.assertArrayEqual(Matrix.random([1], 1, 1).data, [1]);\ntest.assertArrayEqual(Matrix.random([1]).size, [1]);\ntest.assertArrayEqual(Matrix.random([1,2]).size, [1,2]);\ntest.assertArrayEqual(Matrix.random([1,2,3]).size, [1,2,3]);\n\ntest.groupStart('Matirx-zeros');\ntest.assertArrayEqual(Matrix.zeros([1,2,3]).data, [[[0,0,0], [0,0,0]]]);\n\ntest.groupStart('Matirx-ones');\ntest.assertArrayEqual(Matrix.ones([1,2,3]).data, [[[1,1,1], [1,1,1]]]);\n\ntest.groupStart('Matrix-create/equals');\ntest.assertTrue(Matrix.create([1,2,3]).equals(new Matrix([1,2,3])));\n\ntest.groupStart('Matrix-fromString');\ntest.assertTrue(Matrix.fromString(\"1 2 3\").equals(new Matrix([[1,2,3]])), \"Matrix from '1 2 3'\");\ntest.assertTrue(Matrix.fromString(\"1 2 3\\n---\\n4 5 6\").equals(new Matrix([[[1,2,3]], [[4, 5, 6]]])));\n\ntest.groupStart('matrix-first');\ntest.assertEqual(Matrix.create([3,2,1]).first(), 3);\ntest.assertEqual(Matrix.create([3]).first(), 3);\n\ntest.groupStart('matrix-subset');\ntest.assertArrayEqual(Matrix.create([1,2,3]).subset([[1,2]]).data, [2,3]);\ntest.assertArrayEqual(Matrix.create([[1,2,3], [4,5,6], [7,8,9]]).subset([[1,2], [2]]).data, [[6], [9]]);\ntest.assertArrayEqual(Matrix.create([\n    [[1,2,3], [4,5,6]], // 2 x 2 x 3\n    [[7,8,9], [0,4,6]]\n]).subset([[1], [1], [1,2]]).data, [[[4,6]]]);\n\ntest.groupStart('matrix-replace-1d');\nlet mat = Matrix.create([1,2,3]);\ntest.assertArrayEqual(mat.replace([[1,2]], [4,5], inplace=false).data, [1,4,5]);\ntest.assertArrayEqual(mat.data, [1,2,3]);\ntest.assertArrayEqual(mat.replace([[1,2]], [4,5], inplace=true).data, [1,4,5]);\ntest.assertArrayEqual(mat.data, [1,4,5]);\n\ntest.groupStart('matrix-replace-2d');\nmat = Matrix.create([[1,2,3], [4,5,6]]);\ntest.assertArrayEqual(mat.replace([[0, 1], [1]], [[7],[8]], inplace=false).data, [[1,7,3],[4,8,6]]);\ntest.assertArrayEqual(mat.data, [[1,2,3], [4,5,6]]);\ntest.assertArrayEqual(mat.replace([[0, 1], [1]], [[7],[8]], inplace=true).data, [[1,7,3],[4,8,6]]);\ntest.assertArrayEqual(mat.data, [[1,7,3], [4,8,6]]);\n\ntest.groupStart('matrix-replace-3d');\nmat = Matrix.create([[[1,2,3]], [[4,5,6]], [[7,8,9]]]);\ntest.assertArrayEqual(mat.size, [3, 1, 3]);\ntest.assertArrayEqual(\n    mat.replace([[0, 1], [0], [2]], [[[7]], [[8]]], inplace=false).data,\n    [[[1,2,7]], [[4,5,8]], [[7,8,9]]]\n);\ntest.assertArrayEqual(mat.data, [[[1,2,3]], [[4,5,6]], [[7,8,9]]]);\ntest.assertArrayEqual(mat.replace([[0, 1], [0], [2]], [[[7]], [[8]]], inplace=true).data,\n    [[[1,2,7]], [[4,5,8]], [[7,8,9]]]\n);\ntest.assertArrayEqual(mat.data, [[[1,2,7]], [[4,5,8]], [[7,8,9]]], 'this changed');\n\ntest.groupStart('matrix-pad/unpad-1d');\nmat = Matrix.create([1,2,3]);\nlet matPadded = mat.pad([2]);\nlet matUnpadded;\ntest.assertArrayEqual(matPadded.data, [0,0,1,2,3,0,0])\nmatUnpadded = matPadded.unpad([2]);\ntest.assertTrue(matUnpadded.equals(mat));\ntest.assertArrayEqual(mat.data, [1,2,3])\n\ntest.assertArrayEqual(mat.pad([2]).data, [0,0,1,2,3,0,0])\ntest.assertArrayEqual(mat.pad([2]).unpad([2]).data, [1,2,3])\n\ntest.groupStart('matrix-pad-2d');\nmat = Matrix.create([[1,2,3], [4,5,6]]);\nmatPadded = mat.pad([1,2]);\ntest.assertArrayEqual(\n    matPadded.data,\n    [[0,0,0,0,0,0,0], [0,0,1,2,3,0,0], [0,0,4,5,6,0,0], [0,0,0,0,0,0,0]]\n)\nmatUnpadded = matPadded.unpad([1,2]);\ntest.assertTrue(matUnpadded.equals(mat));\ntest.assertArrayEqual(mat.data, [[1,2,3], [4,5,6]])\ntest.assertArrayEqual(\n    mat.pad([1,2]).data,\n    [[0,0,0,0,0,0,0], [0,0,1,2,3,0,0], [0,0,4,5,6,0,0], [0,0,0,0,0,0,0]]\n)\n\ntest.groupStart('matrix-pad-3d');\nmat = Matrix.create([[[1,2], [3,4]], [[5,6], [7,8]]])\nmatPadded = mat.pad([1,1,1], type='zero', inplace=false);\ntest.assertArrayEqual(\n    matPadded.data,\n    [[[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\n     [[0,0,0,0], [0,1,2,0], [0,3,4,0], [0,0,0,0]],\n     [[0,0,0,0], [0,5,6,0], [0,7,8,0], [0,0,0,0]],\n     [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]]]\n)\nmatUnpadded = matPadded.unpad([1,1,1]);\ntest.assertTrue(matUnpadded.equals(mat))\ntest.assertArrayEqual(mat.data, [[[1,2], [3,4]], [[5,6], [7,8]]]);\ntest.assertArrayEqual(\n    mat.pad([1,1,1]).data,\n    [[[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]],\n     [[0,0,0,0], [0,1,2,0], [0,3,4,0], [0,0,0,0]],\n     [[0,0,0,0], [0,5,6,0], [0,7,8,0], [0,0,0,0]],\n     [[0,0,0,0], [0,0,0,0], [0,0,0,0], [0,0,0,0]]]\n)\ntest.assertArrayEqual(mat.data, [[[1,2], [3,4]], [[5,6], [7,8]]]);\n\ntest.groupStart('matrix-resize');\nmat = Matrix.ones([1,1,1]);\nlet matResized = mat.resize([1,3,2], 'zero', false);\ntest.assertArrayEqual(matResized.data, [[[1,0], [0,0], [0,0]]]);\n\nmat = Matrix.zeros([2,4]);\nmat.resize([3,3], {fill: 'random', min: 1, max: 1}, true);\ntest.assertArrayEqual(mat.data, [[0,0,0],[0,0,0],[1,1,1]]);\n\ntest.groupStart('matrix-flatten');\ntest.assertArrayEqual(Matrix.ones([1]).flatten(), [1]);\ntest.assertArrayEqual(Matrix.ones([1, 2]).flatten(), [1, 1]);\ntest.assertArrayEqual(Matrix.ones([1,2,3]).flatten(), [1,1,1,1,1,1]);\n\ntest.groupStart('matrix-reshape');\nmat = Matrix.ones([1,2,3]);\nmat.reshape([3,1,2]);\ntest.assertArrayEqual(mat.data, [[[1,1]], [[1,1]], [[1,1]]]);\nmat.reshape([2,3]);\ntest.assertArrayEqual(mat.data, [[1,1,1], [1,1,1]]);\nmat = Matrix.ones([2,3]);\ntest.assertArrayEqual(mat.reshape([1, 3,2], false).data, [[[1,1], [1,1], [1,1]]]);\ntest.assertArrayEqual(mat.data, [[1,1,1], [1,1,1]])\n\ntest.groupStart('matrix.stringify');\nmat = Matrix.create([1,2,3]);\ntest.assertEqual(mat.stringify(), \"1 2 3\");\nmat = Matrix.create([[1,2], [2,3]]);\ntest.assertEqual(mat.stringify(), \"1 2\\n2 3\");\nmat = Matrix.create([[[1,2], [2,3]], [[3,4], [5,6]]]);\ntest.assertEqual(mat.stringify(), \"1 2\\n2 3\\n---\\n3 4\\n5 6\");\n\ntest.groupStart('matrix.mulsum');\nmat = Matrix.create([1]);\nlet mat2 = Matrix.create([2]);\ntest.assertEqual(mat.mulsum(mat2), 2);\nmat = Matrix.create([2,3]);\nmat2 = Matrix.create([3,1]);\ntest.assertEqual(mat.mulsum(mat2), 9);\nmat = Matrix.create([[1,2], [1,3]]);\nmat2 = Matrix.create([[3,1], [2,3]]);\ntest.assertEqual(mat.mulsum(mat2), 16);\nmat = Matrix.create([[[1,2], [1,3]], [[1,1], [2,2]]]);\nmat2 = Matrix.create([[[3,1], [2,3]], [[0,1], [1,1]]]);\ntest.assertEqual(mat.mulsum(mat2), 21);\n\ntest.groupStart('matrix.min/max/mean');\ntest.assertEqual(mat.mean(), 13.0/8.0)\ntest.assertEqual(mat.min(), 1)\ntest.assertEqual(mat.max(), 3)\ntest.assertEqual(mat2.mean(), 12.0/8.0)\ntest.assertEqual(mat2.min(), 0)\ntest.assertEqual(mat2.max(), 3)\ntest.assertEqual(Matrix.create([1,2,3]).min(), 1)\ntest.assertEqual(Matrix.create([1,2,3]).max(), 3)\ntest.assertEqual(Matrix.create([[1,2],[3,4]]).min(), 1)\ntest.assertEqual(Matrix.create([[1,2],[3,4]]).max(), 4)\n\ntest.groupStart('matrix.copy');\nmat = Matrix.create([1,2,3]);\nmat2 = mat.copy();\nmat.replace([1], [8]);\ntest.assertArrayEqual(mat.data, [1,8,3]);\ntest.assertArrayEqual(mat2.data, [1,2,3]);\n\ntest.groupStart('matrix.dilation');\nmat = Matrix.create([1,1,1]);\ntest.assertArrayEqual(mat.dilate([2]).data, [1,0,1,0,1]);\nmat = Matrix.create([[1,1,1], [1,1,1]]);\ntest.assertArrayEqual(mat.dilate([2,2]).data, [[1,0,1,0,1], [0,0,0,0,0], [1,0,1,0,1]]);\nmat = Matrix.create([[[1,1], [1,1]], [[1,1], [1,1]]]);\ntest.assertArrayEqual(mat.dilate([2,2,2]).data, [[[1,0,1], [0,0,0], [1,0,1]], [[0,0,0], [0,0,0], [0,0,0]], [[1,0,1], [0,0,0], [1,0,1]]]);\n\ntest.groupStart('matrix.get/set');\nmat = Matrix.create([1,2,3]);\ntest.assertEqual(mat.get([2]), 3);\nmat.set([0], 3);\ntest.assertArrayEqual(mat.data, [3,2,3]);\n\nmat = Matrix.create([[1,2], [1,3]]);\ntest.assertEqual(mat.get([1,0]), 1);\nmat.set([1,1], 10);\ntest.assertArrayEqual(mat.data, [[1,2], [1,10]]);\n\nmat = Matrix.create([[[1,2], [1,3]], [[1,1], [2,2]]]);\ntest.assertEqual(mat.get([0,1,1]), 3);\nmat.set([1,0,1], 8);\ntest.assertArrayEqual(mat.data, [[[1,2], [1,3]], [[1,8], [2,2]]])\n\ntest.groupStart('matrix.forEach')\nmat = Matrix.create([1,2,3]);\nlet foreachResult = [];\nmat.forEach(d => foreachResult.push(d*2));\ntest.assertArrayEqual(foreachResult, [2,4,6]);\nmat.forEach((d, i) => foreachResult[i] /= 2);\ntest.assertArrayEqual(foreachResult, [1,2,3]);\n\nmat = Matrix.create([[1,2], [1,3]]);\nforeachResult = [];\nmat.forEach(d => foreachResult.push(d*2));\ntest.assertArrayEqual(foreachResult, [2,4,2,6]);\nforeachResult = [];\nmat.forEach((d, i, j) => foreachResult.push([d, i, j]));\ntest.assertArrayEqual(foreachResult, [[1, 0, 0], [2, 0, 1], [1, 1, 0], [3, 1, 1]]);\n\nmat = Matrix.create([[[1,2], [1,3]], [[1,1], [2,2]]]);\nforeachResult = [];\nmat.forEach(d => foreachResult.push(d*2));\ntest.assertArrayEqual(foreachResult, [2,4,2,6,2,2,4,4]);\nforeachResult = [];\nmat.forEach((d, i, j, k) => foreachResult.push([d, i, j, k]));\ntest.assertArrayEqual(foreachResult, [\n    [1, 0, 0, 0],\n    [2, 0, 0, 1],\n    [1, 0, 1, 0],\n    [3, 0, 1, 1],\n    [1, 1, 0, 0],\n    [1, 1, 0, 1],\n    [2, 1, 1, 0],\n    [2, 1, 1, 1]]);\n\ntest.groupStart('matrix.map');\nmat = Matrix.create([1,2,3]);\ntest.assertArrayEqual(mat.map(d => 2*d).data, [2,4,6]);\nmat = Matrix.create([[1,2], [1,3]]);\ntest.assertArrayEqual(mat.map(d => 2*d).data, [[2,4], [2,6]]);\nmat = Matrix.create([[[1,2], [1,3]], [[1,1], [2,2]]]);\ntest.assertArrayEqual(mat.map(d => 2*d).data, [[[2,4],[2,6]],[[2,2],[4,4]]]);\n\ntest.groupStart('convolution-1d')\nmat = Matrix.create([1,2,3,2,1]);\nlet convoluted = mat.conv([0], [1,1], [1], [1]);\ntest.assertTrue(convoluted instanceof Convolution);\ntest.assertArrayEqual(convoluted.output.data, [3,5,5,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1]), [1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3]), [3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4]), [3]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], true), [[0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], true), [[1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], true), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], true), [[3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], true), [[3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], false), [[0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], false), [[1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], false), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], false), [[3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], false), [[3,4]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0]), [0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1]), [1]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2]), [2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([3]), [3]);\n\ntest.groupStart('convolution-1d-dilation')\nmat = Matrix.create([1,2,3,2,1]);\nconvoluted = mat.conv([0], [1,1], [2], [1]);\ntest.assertArrayEqual(convoluted.output.data, [4,4,4]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1]), [1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], true), [[0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], true), [[1,2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], true), [[2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], true), [[2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], true), [[2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], false), [[0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], false), [[1,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], false), [[2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], false), [[2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], false), [[2,4]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0]), [0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1]), [1]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2]), [2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([3]), [3]);\n\ntest.groupStart('convolution-1d-stride')\nmat = Matrix.create([1,2,3,2,1]);\nconvoluted = mat.conv([0], [1,1], [1], [2]);\ntest.assertArrayEqual(convoluted.output.data, [3,5]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2]), [1], 'inCoordsToOut([2])'); //4\ntest.assertArrayEqual(convoluted.inCoordsToOut([3]), [1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4]), [1]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], true), [[0,1]]); //7\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], true), [[0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], true), [[2,3]]); //9\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], true), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], true), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], false), [[0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], false), [[0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], false), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], false), [[2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], false), [[2,3]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0]), [0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1]), [2]);\n\ntest.groupStart('convolution-1d-all')\nmat = Matrix.create([1,2,3,2]);\nconvoluted = mat.conv([2], [1,1], [2], [2]);\n// 0,0,1,2,3,2,0,0\n// 1,0,1\n//     1,0,1\n//         1,0,1\ntest.assertArrayEqual(convoluted.output.data, [1,4,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1]), [0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2]), [1]); //4\ntest.assertArrayEqual(convoluted.inCoordsToOut([3]), [1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6]), [2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7]), [2]); // 9\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], true), [[0,1,2]]); //10\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], true), [[0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], true), [[2,3,4]]); //12\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], true), [[2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], true), [[4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5], true), [[4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6], true), [[4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7], true), [[4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0], false), [[0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1], false), [[0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2], false), [[2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3], false), [[2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4], false), [[4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5], false), [[4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6], false), [[4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7], false), [[4,6]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0]), [0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1]), [2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2]), [4]);\n\ntest.groupStart('convolution-2d')\nmat = Matrix.create([\n    [1,2,3,2,1],\n    [0,1,2,1,0],\n    [0,2,1,1,1],\n    [3,1,2,1,2],\n]);\nconvoluted = mat.conv([0,0], [\n    [0,1],\n    [1,0]\n], [1,1], [1,1]);\ntest.assertTrue(convoluted instanceof Convolution); //1\ntest.assertArrayEqual(convoluted.output.data, [ //2\n    [2,4,4,2],\n    [1,4,2,1],\n    [5,2,3,2]\n]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,0]), [0,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,1]), [0,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,2]), [0,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,3]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,4]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,0]), [1,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,1]), [1,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,2]), [1,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,3]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,4]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,1]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,2]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,3]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,4]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,1]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,2]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,3]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,4]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,0], true), [[0,1], [0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,1], true), [[0,1], [1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,2], true), [[0,1], [2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,3], true), [[0,1], [3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,4], true), [[0,1], [3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,0], false), [[0,1], [0,1]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,1], false), [[0,1], [1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,2], false), [[0,1], [2,3]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,3], false), [[0,1], [3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,4], false), [[0,1], [3,4]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 0]), [0, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 1]), [0, 1]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 2]), [0, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 3]), [0, 3]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 0]), [1, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 1]), [1, 1]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 2]), [1, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 3]), [1, 3]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 0]), [2, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 1]), [2, 1]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 2]), [2, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 3]), [2, 3]);\n\ntest.groupStart('convolution-2d-all')\nmat = Matrix.create([\n    [1,2,3,2,1,1],\n    [0,1,2,1,0,1],\n    [0,2,1,1,1,1],\n    [3,1,2,1,2,1],\n]);\nconvoluted = mat.conv([2,2], [\n    [0,1],\n    [1,0]\n], [2,2], [2,2]);\ntest.assertTrue(convoluted instanceof Convolution); //1\n//\n// 0,0,0,0,0,0,0,0,0,0\n// 0,0,0,0,0,0,0,0,0,0\n// 0,0,1,2,3,2,1,1,0,0      0,0,1\n// 0,0,0,1,2,1,0,1,0,0  =>  0,0,0\n// 0,0,0,2,1,1,1,1,0,0      1,0,0\n// 0,0,3,1,2,1,2,1,0,0\n// 0,0,0,0,0,0,0,0,0,0\n// 0,0,0,0,0,0,0,0,0,0\n//\ntest.assertArrayEqual(convoluted.output.data, [ //2\n    [0,1,3,1],\n    [1,3,2,1],\n    [0,1,1,0]\n]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,0]), [0,0]);//3\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,1]), [0,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,2]), [0,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,3]), [0,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,4]), [0,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,5]), [0,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,6]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,7]), [0,3]);//10\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,8]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([0,9]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,0]), [0,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,1]), [0,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,2]), [0,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,3]), [0,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,4]), [0,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,5]), [0,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,6]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,7]), [0,3]);//20\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,8]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([1,9]), [0,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,0]), [1,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,1]), [1,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,2]), [1,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,3]), [1,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,4]), [1,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,5]), [1,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,6]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,7]), [1,3]);//30\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,8]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([2,9]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,0]), [1,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,1]), [1,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,2]), [1,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,3]), [1,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,4]), [1,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,5]), [1,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,6]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,7]), [1,3]);//40\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,8]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([3,9]), [1,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,1]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,2]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,3]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,4]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,5]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,6]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,7]), [2,3]);//50\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,8]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([4,9]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,1]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,2]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,3]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,4]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,5]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,6]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,7]), [2,3]);//60\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,8]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([5,9]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,1]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,2]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,3]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,4]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,5]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,6]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,7]), [2,3]);//70\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,8]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([6,9]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,0]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,1]), [2,0]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,2]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,3]), [2,1]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,4]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,5]), [2,2]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,6]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,7]), [2,3]);//80\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,8]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToOut([7,9]), [2,3]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,0], true), [[0,1,2], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,1], true), [[0,1,2], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,2], true), [[0,1,2], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,3], true), [[0,1,2], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,4], true), [[0,1,2], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,5], true), [[0,1,2], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,6], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,7], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,8], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,9], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,0], true), [[0,1,2], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,1], true), [[0,1,2], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,2], true), [[0,1,2], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,3], true), [[0,1,2], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,4], true), [[0,1,2], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,5], true), [[0,1,2], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,6], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,7], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,8], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,9], true), [[0,1,2], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,0], true), [[2,3,4], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,1], true), [[2,3,4], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,2], true), [[2,3,4], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,3], true), [[2,3,4], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,4], true), [[2,3,4], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,5], true), [[2,3,4], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,6], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,7], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,8], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,9], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,0], true), [[2,3,4], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,1], true), [[2,3,4], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,2], true), [[2,3,4], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,3], true), [[2,3,4], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,4], true), [[2,3,4], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,5], true), [[2,3,4], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,6], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,7], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,8], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,9], true), [[2,3,4], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,0], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,1], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,2], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,3], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,4], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,5], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,6], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,7], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,8], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,9], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,0], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,1], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,2], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,3], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,4], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,5], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,6], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,7], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,8], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,9], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,0], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,1], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,2], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,3], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,4], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,5], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,6], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,7], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,8], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,9], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,0], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,1], true), [[4,5,6], [0,1,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,2], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,3], true), [[4,5,6], [2,3,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,4], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,5], true), [[4,5,6], [4,5,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,6], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,7], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,8], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,9], true), [[4,5,6], [6,7,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,0], false), [[0,2], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,1], false), [[0,2], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,2], false), [[0,2], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,3], false), [[0,2], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,4], false), [[0,2], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,5], false), [[0,2], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,6], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,7], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,8], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([0,9], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,0], false), [[0,2], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,1], false), [[0,2], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,2], false), [[0,2], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,3], false), [[0,2], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,4], false), [[0,2], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,5], false), [[0,2], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,6], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,7], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,8], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([1,9], false), [[0,2], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,0], false), [[2,4], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,1], false), [[2,4], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,2], false), [[2,4], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,3], false), [[2,4], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,4], false), [[2,4], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,5], false), [[2,4], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,6], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,7], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,8], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([2,9], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,0], false), [[2,4], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,1], false), [[2,4], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,2], false), [[2,4], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,3], false), [[2,4], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,4], false), [[2,4], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,5], false), [[2,4], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,6], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,7], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,8], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([3,9], false), [[2,4], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,0], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,1], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,2], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,3], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,4], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,5], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,6], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,7], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,8], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([4,9], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,0], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,1], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,2], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,3], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,4], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,5], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,6], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,7], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,8], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([5,9], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,0], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,1], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,2], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,3], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,4], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,5], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,6], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,7], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,8], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([6,9], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,0], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,1], false), [[4,6], [0,2]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,2], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,3], false), [[4,6], [2,4]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,4], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,5], false), [[4,6], [4,6]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,6], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,7], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,8], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.inCoordsToBlockIndexes([7,9], false), [[4,6], [6,8]]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 0]), [0, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 1]), [0, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 2]), [0, 4]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([0, 3]), [0, 6]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 0]), [2, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 1]), [2, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 2]), [2, 4]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([1, 3]), [2, 6]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 0]), [4, 0]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 1]), [4, 2]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 2]), [4, 4]);\ntest.assertArrayEqual(convoluted.outCoordsToIn([2, 3]), [4, 6]);\n\ntest.done();\n*/\n","<div class=\"container p-4\">\n    <h6 class=\"mb-2 text-lg\">\n        <!-- see: https://github.com/sveltejs/svelte/issues/4546#issuecomment-627357929 -->\n        <slot name=\"title\"></slot>\n        {#if false}<slot></slot>{/if}\n    </h6>\n    <div class=\"content\">\n        <slot name=\"content\"></slot>\n        {#if false}<slot></slot>{/if}\n    </div>\n</div>\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","<script>\nimport { v4 as uuidv4 } from 'uuid';\nimport { Snackbar } from 'smelte';\n\n// valid value\nexport let value;\nexport let min = 0;\nexport let errorMsg = 'Dimension must be a positive integer.';\nexport let bindVal;\n\nconst baseClasses = [\n    \"inline-box\", \"border\", \"text-xs\", \"py-1\", \"px-2\", \"w-1/6\", \"rounded\", \"text-black\", \"dark:text-gray-100\", \"caret-blue-500\", , \"dark:bg-dark-600\"\n];\n\nlet hovered = false;\nlet error = false;\n// visual value in the box\nlet classes;\n\n$: if (bindVal === undefined) {\n    classes = [...baseClasses, \"border-gray-400\"];\n} else if (!/^\\d+$/.test(bindVal) || Number(bindVal) < min) {\n    error = true;\n    classes = [\n        ...baseClasses,\n        \"border-error-500\",\n        hovered ? \"bg-error-transDark\" : \"bg-error-transLight\"\n    ];\n} else {\n    error = false;\n    value = Number(bindVal);\n    classes = [\n        ...baseClasses,\n        \"border-primary-400\",\n        hovered ? \"bg-primary-transDark\" : \"bg-primary-transLight\"\n    ];\n}\n\nconst handleKeyup = (event) => {\n    if (event.keyCode === 38) { // up arrow\n        value = Number(event.target.value) + 1;\n    } else if (event.keyCode === 40) { // down arrow\n        const valueMinus = Number(event.target.value) - 1;\n        if (valueMinus >= min) {\n            value = valueMinus;\n        }\n    }\n};\n\n</script>\n\n<input\n    type=\"text\"\n    bind:value={bindVal}\n    on:keyup={handleKeyup}\n    on:mouseenter={() => hovered = !hovered}\n    on:mouseleave={() => hovered = !hovered}\n    on:focus={e => e.target.select()}\n    disabled={value === undefined}\n    class={classes.join(\" \")} />\n<Snackbar\n  noAction\n  hash={uuidv4()}\n  color=\"error\"\n  timeout={2000}\n  class=\"pointer-events-auto flex absolute py-2 text-sm\n         px-4 z-30 mb-4 content-between mx-auto\n         rounded items-center elevation-2\"\n  left\n  bind:value={error}>\n  <div>{errorMsg}</div>\n</Snackbar>\n","<script>\nimport { Matrix } from '../../math.js';\nimport SettingsOneDim from \"./SettingsOneDim.svelte\";\n\nexport let value;\nexport let errorMsg;\nexport let min;\n\n</script>\n\n<SettingsOneDim\n    bind:value={value[value.length-3]}\n    bindVal={value[value.length-3]}\n    min={min}\n    errorMsg={errorMsg} />\n<span class=\"px-1\">x</span>\n<SettingsOneDim\n    bind:value={value[value.length-2]}\n    bindVal={value[value.length-2]}\n    min={min}\n    errorMsg={errorMsg} />\n<span class=\"px-1\">x</span>\n<SettingsOneDim\n    bind:value={value[value.length-1]}\n    bindVal={value[value.length-1]}\n    min={min}\n    errorMsg={errorMsg} />\n","<script>\nimport { createEventDispatcher } from 'svelte';\nimport { Switch } from \"smelte\";\n\nexport let value = false;\nexport let label = \"\";\nexport let color = \"primary\";\nexport let classes = 'inline-flex mb-1 items-center cursor-pointer z-10';\n\nconst dispatcher = createEventDispatcher();\n\nconst change = () => {\n    value = !value;\n    dispatcher('change', {value: value});\n}\n\n</script>\n\n<div class=\"inline-block {$$props.class}\" on:click|capture|stopPropagation={change}>\n    <Switch\n        value={value}\n        label={label}\n        color={color}\n        labelClasses='body-2 pl-2 cursor-pointer'\n        classes={classes}\n    />\n</div>\n","import { Matrix } from './math.js';\n\nexport const copySettings = (orig) => {\n    const ret = {};\n    for (let key in orig) {\n        const val = orig[key];\n        if (val instanceof Matrix) {\n            ret[key] = val.copy();\n        } else if (val.constructor === Object) {\n            ret[key] = copySettings(val);\n        } else {\n            ret[key] = JSON.parse(JSON.stringify(val));\n        }\n    }\n    return ret;\n};\n\nexport const defaultSettings = {\n    autoWalker: true,\n    visual: true,\n    showData: false,\n    dimty: 2, // defaults to 2d.\n    dims: {\n        1: {\n            input: {\n                data: Matrix.random([10]),\n                size: [10],\n                padding: [0]\n            },\n            kernel: {\n                type: 'conv',\n                data: Matrix.random([3], -1, 1),\n                size: [3],\n                dilation: [1],\n                stride: [1]\n            }\n        },\n        2: {\n            input: {\n                data: Matrix.random([9, 9]),\n                size: [9, 9],\n                padding: [0, 0]\n            },\n            kernel: {\n                type: 'conv',\n                data: Matrix.random([3, 3], -1, 1),\n                size: [3, 3],\n                dilation: [1, 1],\n                stride: [1, 1]\n            }\n        },\n        3: {\n            input: {\n                data: Matrix.random([5, 5, 5]),\n                size: [5, 5, 5],\n                padding: [0, 0, 0]\n            },\n            kernel: {\n                type: 'conv',\n                data: Matrix.random([2, 2, 2], -1, 1),\n                size: [2, 2, 2],\n                dilation: [1, 1, 1],\n                stride: [1, 1, 1]\n            }\n        }\n    }\n};\n","<script>\nimport { createEventDispatcher } from \"svelte\";\n\nimport {Tooltip, Button, Slider, Icon, Dialog, Snackbar} from \"smelte\";\nimport Container from './Container.svelte';\nimport SettingsDimension from './settings/SettingsDimension.svelte';\nimport Switch from './settings/Switch.svelte';\nimport { prod, Matrix } from '../math.js';\nimport { defaultSettings, copySettings } from '../settings.js';\n\nexport let settings;\nexport let controlStart;\n\nlet kernelType = 1;\n\n$: settings.dims[settings.dimty].kernel.type = kernelType === 1 ? 'conv' : (\n    kernelType === 2 ? 'maxpool' : 'avgpool'\n)\n$: if (!settings.visual) {\n    settings.showData = false;\n}\n\nlet showDataDialog = false;\nlet dataInput;\nlet dataType;\nlet dataError = false;\nlet dataErrorMsg;\n\nconst dispatcher = createEventDispatcher();\nconst resetView = () => {\n    dispatcher('viewReset');\n};\n\n$: randomDataUpdate = () => {\n    if (dataType === 'kernel') {\n        settings.dims[settings.dimty].kernel.data = Matrix.random(\n            settings.dims[settings.dimty].kernel.data.size, -1, 1\n        );\n    } else {\n        settings.dims[settings.dimty].input.data = Matrix.random(\n            settings.dims[settings.dimty].input.data.size\n        );\n    }\n};\n\n$: randomDataToTextarea = (textarea) => {\n    textarea.value = dataType === 'kernel' ?\n        Matrix.random(settings.dims[settings.dimty].kernel.data.size, -1, 1).stringify() :\n        Matrix.random(settings.dims[settings.dimty].input.data.size).stringify();\n};\n\n$: saveData = (textarea) => {\n    if (dataError) {dataError = false;}\n    try {\n        const data = Matrix.fromString(textarea.value);\n        const total = prod(\n            dataType === 'kernel' ?\n                settings.dims[settings.dimty].kernel.data.size :\n                settings.dims[settings.dimty].input.data.size\n        );\n        if (total !== prod(data.size)) {\n            throw `Dimension mismatch. Expected total ${total} elements,\n                but got ${prod(data.size)}`;\n        }\n\n        if (dataType === 'kernel') {\n            data.reshape(settings.dims[settings.dimty].kernel.data.size);\n            settings.dims[settings.dimty].kernel.data = data;\n        } else {\n            data.reshape(settings.dims[settings.dimty].input.data.size);\n            settings.dims[settings.dimty].input.data = data;\n        }\n        showDataDialog = false;\n    } catch(e) {\n        dataError = true;\n        dataErrorMsg = e;\n    }\n};\n\n$: settings.dims[settings.dimty].input.data.resize(\n    settings.dims[settings.dimty].input.size,\n    {fill: 'random', min: 0, max: 9}\n);\n\n$: settings.dims[settings.dimty].kernel.data.resize(\n    settings.dims[settings.dimty].kernel.size,\n    {fill: 'random', min: -1, max: 1}\n);\n\n</script>\n\n<Container>\n    <div slot=\"title\" class=\"flex flex-row\" style=\"align-items: center;\">\n        <div>Settings</div>\n        <div class=\"leading-none flex-grow text-right\">\n            <Tooltip>\n                <div slot=\"activator\">\n                    <Icon\n                        on:click={() => settings = copySettings(defaultSettings)}\n                        class=\"cursor-pointer\">\n                        settings_backup_restore\n                    </Icon>\n                </div>\n                Reset settings\n            </Tooltip>\n        </div>\n    </div>\n    <div slot=\"content\">\n\n        <div class=\"subtitle-1 font-medium mb-1\">Visualization</div>\n        <Tooltip>\n            <div slot=\"activator\">\n                <Switch\n                    bind:value={settings.visual}\n                    class=\"w-32\"\n                    label={settings.visual ? 'Disable' : 'Enable'}\n                />\n            </div>\n            You can disable visualization, with just dimension calculation. <br />\n            This is useful when you have large dimensions that your browser can't visualize them.\n        </Tooltip>\n\n        {#if settings.visual}\n        <Switch\n            bind:value={settings.showData}\n            label={settings.showData ? 'Hide Data' : 'Show Data'}\n        />\n        {/if}\n\n        {#if settings.dimty === 3}\n        <Switch\n            bind:value={controlStart}\n            class=\"w-32\"\n            label={controlStart ? 'Stop Control' : 'Start Control'}\n        />\n        <Button\n            small\n            flat\n            color=\"blue\"\n            on:click = {resetView}>\n            Reset View\n        </Button>\n        {/if}\n\n        <div class=\"subtitle-1 font-medium mb-1 mt-3\">\n            Dimensionality: {settings.dimty}\n        </div>\n        <div on:mousedown|stopPropagation={() => {settings.autoWalker = false}}>\n            <Slider\n                min={1}\n                max={3}\n                bind:value={settings.dimty} />\n        </div>\n\n        <div class=\"subtitle-1 font-medium mb-1 mt-3\">\n            Input\n        </div>\n        <div class=\"body-2\">Dimension</div>\n        <SettingsDimension min={1} bind:value={settings.dims[settings.dimty].input.size} />\n        <div class=\"body-2\">Padding</div>\n        <SettingsDimension\n            bind:value={settings.dims[settings.dimty].input.padding} />\n        {#if settings.showData}\n        <div class=\"body-2\">Data</div>\n        <Button\n            small\n            flat\n            on:click = { () => {dataType = 'input'; randomDataUpdate();} }>\n            Random\n        </Button>\n        <Button\n            small\n            flat\n            on:click = {() => {dataType = 'input'; showDataDialog = true;}}>\n            Paste\n        </Button>\n        <Dialog bind:value={showDataDialog} class=\"w-1/2 h-auto\" persistent>\n            <h5 slot=\"title\">Paste your {dataType} data:</h5>\n            <div class=\"text-gray-700\">Whitespace (tab/space) delimited. </div>\n            <div class=\"text-gray-700\">For 3D data, use <code class=\"border\">---</code> to separate at dim 0.</div>\n            <div class=\"text-gray-700 mb-1\">Only integers from 0 to 10 allowed.</div>\n            <textarea class=\"border w-full h-64\" bind:this={dataInput}></textarea>\n            <div slot=\"actions\">\n                <Button text\n                    on:click={() => randomDataToTextarea(dataInput)}>\n                    Random\n                </Button>\n                <Button text\n                    on:click={() => saveData(dataInput)}>\n                    Apply\n                </Button>\n                <Button text color=\"alert\"\n                    on:click={() => {showDataDialog = false; dataInput.value = ''}}>Cancel\n                </Button>\n            </div>\n        </Dialog>\n        {/if}\n\n        <div class=\"subtitle-1 font-medium mb-1 mt-3\">\n            Kernel\n        </div>\n\n        {#if settings.showData}\n        <div class=\"body-2\">\n            Type: {settings.dims[settings.dimty].kernel.type}\n        </div>\n        <Slider\n            min={1}\n            max={3}\n            bind:value={kernelType} />\n        {/if}\n\n        <div class=\"body-2\">\n            Size\n        </div>\n        <SettingsDimension\n            bind:value={settings.dims[settings.dimty].kernel.size}\n            min={1}\n            errorMsg=\"Kernel size must be a natural number.\" />\n\n        <div class=\"body-2\">Stride</div>\n        <SettingsDimension\n            bind:value={settings.dims[settings.dimty].kernel.stride}\n            min={1}\n            errorMsg=\"Stride must be a natural number.\" />\n\n\n        <div class=\"body-2\">Dilation</div>\n        <SettingsDimension\n            bind:value={settings.dims[settings.dimty].kernel.dilation}\n            min={1}\n            errorMsg=\"Dilation must be a natural number.\" />\n\n        {#if settings.showData && kernelType === 1}\n        <div class=\"body-2\">Data</div>\n        <Button\n            small\n            flat\n            on:click = { () => {dataType = 'kernel'; randomDataUpdate();} }>\n            Random\n        </Button>\n        <Button\n            small\n            flat\n            on:click = {() => {dataType = 'kernel'; showDataDialog = true;}}>\n            Paste\n        </Button>\n        {/if}\n\n        <div class=\"subtitle-1 font-medium mb-1 mt-3\">AutoWalker</div>\n        <Tooltip>\n            <div slot=\"activator\">\n                <Button\n                    small\n                    flat\n                    light={!settings.autoWalker}\n                    disabled={!settings.visual}\n                    on:click = {() => settings.autoWalker = !settings.autoWalker}\n                    value={settings.autoWalker}>\n                    {settings.autoWalker ? 'Stop' : 'Start'}\n                </Button>\n            </div>\n            autoWalker will be automatically stopped while you hover on the input or output.\n        </Tooltip>\n\n    </div>\n</Container>\n\n<Snackbar\n  noAction\n  color=\"alert\"\n  hash=\"dataerror\"\n  timeout={2000}\n  class=\"pointer-events-auto flex absolute py-2 text-sm\n         px-4 z-30 mb-4 content-between mx-auto\n         rounded items-center elevation-2\"\n  left\n  value={dataError}>\n  <div>{dataErrorMsg}</div>\n</Snackbar>\n\n<style>\n:global(.tooltip) {\n    left: 110% !important;\n    top: -10px !important;\n    transform: none !important;\n}\n</style>\n","<script>\nimport { createEventDispatcher } from 'svelte';\n\nexport let irow;\nexport let icol;\nexport let type;\nexport let size;\nexport let isPadding;\nexport let isActive;\nexport let data;\n\n$: sizeClasses = size === 'with-data' ? 'h-4 w-4' : (size === 'small' ? 'h-1 w-1' : (\n    size === 'medium' ? 'h-2 w-2' : 'h-3 w-3'\n));\n\n$: typeClasses = isPadding ? 'bg-gray-500' : (\n    type === 'kernel' ? 'bg-primary-900' : (\n        type === 'input' ? 'bg-secondary-900' : 'bg-blue-900'\n    )\n);\n\n$: activeClasses = isActive ? 'bg-opacity-100' : 'bg-opacity-50';\n\nconst dispatcher = createEventDispatcher();\n\nconst activate = () => {\n    dispatcher('activate', {\n        coord: irow === undefined ? [icol] : [irow, icol]\n    });\n};\n\nconst deactivate = () => {\n    dispatcher('deactivate');\n}\n</script>\n\n<div\n    class=\"text-xs {sizeClasses} {typeClasses} {activeClasses}\"\n    on:mouseenter={activate}\n    on:mouseleave={deactivate}>\n    {data === undefined || isPadding ? '' : data}\n</div>\n","<script>\nimport { Icon } from 'smelte';\nimport Box2d from \"./Box2d.svelte\";\n\n// The type: kernel/input/output\nexport let type;\n// The active boxes\nexport let actives;\n\nexport let showData;\n\nexport let data; // input/kernel\nexport let inputData;\n// the convoluted data\nexport let outputData;\n\n$: dataPadded = data.padding ? data.data.pad(data.padding, 'zero') : data.data;\n$: dataPaddedSize = data.size.length === 1 ? [1, dataPadded.size[0]] : dataPadded.size;\n\n$: maxsize = Math.max.apply(null, dataPaddedSize);\n$: boxsize = showData ? 'with-data' : (\n    maxsize < 40 ? 'large' : (maxsize < 100 ? 'medium' : 'small')\n);\n\n$: isPadding = (irow, icol) => {\n    if (!data.padding)\n        return false;\n    if (data.size.length === 2) {\n        return irow < data.padding[0] ||\n            irow >= dataPaddedSize[0] - data.padding[0] ||\n            icol < data.padding[1] ||\n            icol >= dataPaddedSize[1] - data.padding[1];\n    } else {\n        return icol < data.padding[0] ||\n            icol >= dataPaddedSize[1] - data.padding[0];\n    }\n};\n\n$: isActive = (irow, icol) => {\n    if (!actives)\n        return false;\n    if (data.size.length === 2) {\n        return actives[0].includes(irow) && actives[1].includes(icol);\n    } else {\n        return actives[0].includes(icol);\n    }\n}\n\n</script>\n\n<div\n    class=\"matrix-wrapper mx-auto\"\n    style=\"--matrix-nrows: {dataPaddedSize[0]}; --matrix-ncols: {dataPaddedSize[1]}\">\n    {#each Array(dataPaddedSize[0]) as _, irow}\n        {#each Array(dataPaddedSize[1]) as _, icol}\n            <Box2d\n                isPadding={isPadding(irow, icol)}\n                isActive={isActive(irow, icol)}\n                irow={data.size.length === 1 ? undefined : irow}\n                icol={icol}\n                type={type}\n                data={showData ? (data.size.length === 1 ?\n                    dataPadded.data[icol] :\n                    dataPadded.data[irow][icol]) : ''}\n                on:activate\n                on:deactivate\n                size={boxsize} />\n        {/each}\n    {/each}\n</div>\n\n{#if showData && type === 'kernel'}\n<Icon class=\"cursor-pointer px-2\">clear</Icon>\n\n<div\n    class=\"matrix-wrapper mx-auto\"\n    style=\"--matrix-nrows: {dataPaddedSize[0]}; --matrix-ncols: {dataPaddedSize[1]}\">\n    {#each Array(dataPaddedSize[0]) as _, irow}\n        {#each Array(dataPaddedSize[1]) as _, icol}\n            <Box2d\n                isPadding={isPadding(irow, icol)}\n                isActive={isActive(irow, icol)}\n                irow={data.size.length === 1 ? undefined : irow}\n                icol={icol}\n                type='input'\n                data={inputData && (inputData.size.length === 1 ?\n                    inputData.data[icol] :\n                    inputData.data[irow][icol])}\n                size={boxsize} />\n        {/each}\n    {/each}\n</div>\n\n<Icon class=\"cursor-pointer px-2\">drag_handle</Icon>\n\n<div class=\"matrix-wrapper\">\n    <Box2d\n        isPadding={false}\n        isActive={false}\n        irow={0}\n        icol={0}\n        type='output'\n        data={outputData}\n        size={boxsize} />\n</div>\n{/if}\n\n<style>\n.matrix-wrapper {\n    display: inline-grid;\n    grid-gap: 1px;\n    grid-template-rows: repeat(var(--matrix-nrows), min-content);\n    grid-template-columns: repeat(var(--matrix-ncols), min-content);\n}\n</style>\n","<script>\nimport { createEventDispatcher } from 'svelte';\n\nexport let ix;\nexport let iy;\nexport let iz;\nexport let type;\nexport let size;\nexport let data;\nexport let isPadding;\nexport let isActive;\nexport let posStyle;\n\n$: typeClasses = (ix+iy+iz===0) ? 'bg-alert-900' : (isPadding ? 'bg-gray-600' : (\n    type === 'kernel' ? 'bg-primary-900' : (\n        type === 'input' ? 'bg-secondary-900' : 'bg-blue-900'\n    )\n));\n\n$: activeClasses = isActive ? 'bg-opacity-100' : 'bg-opacity-25';\n\nconst dispatcher = createEventDispatcher();\n\nconst activate = () => {\n    dispatcher('activate', {\n        coord: [ix, iy, iz]\n    });\n};\n\nconst deactivate = () => {\n    dispatcher('deactivate');\n}\n</script>\n\n<div\n    class=\"cube inline-box absolute {typeClasses} {activeClasses}\"\n    style=\"--size: {size}; {posStyle};\"\n    on:mouseenter={activate}\n    on:mouseleave={deactivate}>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-abcd\"></div>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-efgh\"></div>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-abef\"></div>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-cdgh\"></div>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-aceg\">{data === undefined || isPadding ? '' : data}</div>\n    <div class=\"side inline-box border border-white border-opacity-25 absolute side-bdfh\"></div>\n</div>\n\n<style>\n.cube {\n    transform-style: preserve-3d;\n    transform-origin: center center;\n    width: calc(var(--size) * 1px);\n    height: calc(var(--size) * 1px);\n}\n.side {\n    background: inherit;\n    box-sizing: border-box;\n    width: calc(var(--size) * 1px);\n    height: calc(var(--size) * 1px);\n}\n\n/* e-------f\n  /|      /|\n / |     / |\na--|----b  |\n|  g----|--h\n| /     | /\nc-------d\n*/\n.side-abcd {\n    top: 0;\n    left: 0;\n}\n.side-efgh {\n    top: 0;\n    left: 0;\n    transform: translateZ(calc(var(--size) * 1px));\n}\n.side-abef {\n    top: 0;\n    left: 0;\n    transform-origin: top left;\n    transform: rotateX(90deg);\n}\n.side-cdgh {\n    bottom: 0;\n    left: 0;\n    transform-origin: bottom left;\n    transform: rotateX(-90deg);\n}\n.side-aceg {\n    top: 0;\n    left: 0;\n    transform-origin: top left;\n    transform: rotateY(-90deg);\n}\n.side-bdfh {\n    top: 0;\n    right: 0;\n    transform-origin: top right;\n    transform: rotateY(90deg);\n}\n</style>\n","<script>\nimport { Icon } from 'smelte';\nimport { onMount, createEventDispatcher } from 'svelte';\nimport Box3d from \"./Box3d.svelte\";\n\n// The type: kernel/input/output\nexport let type;\n// The active boxes\nexport let actives;\n// show data?\nexport let showData;\n\nexport let data;\nexport let inputData;\nexport let outputData;\n\nexport let scene;\nexport let scene2;\nexport let scene3;\n\n$: padding = padding === undefined ? [0, 0, 0] : padding;\n$: actives = (actives === undefined || actives.length < 3) ? [[], [], []] : actives;\n$: dataPadded = data.padding ? data.data.pad(data.padding, 'zero') : data.data;\n\n$: maxsize = Math.max.apply(null, dataPadded.size);\n$: boxsize = maxsize < 20 ? 30 : (maxsize < 50 ? 20 : 12);\n\n$: isPadding = (ix, iy, iz) => {\n    if (!data.padding)\n        return false;\n    return ix < data.padding[0] ||\n        ix >= dataPadded.size[0] - data.padding[0] ||\n        iy < data.padding[1] ||\n        iy >= dataPadded.size[1] - data.padding[1] ||\n        iz < data.padding[2] ||\n        iz >= dataPadded.size[2] - data.padding[2];\n};\n\n$: isActive = (ix, iy, iz) => {\n    return actives[0].includes(ix) &&\n        actives[1].includes(iy) &&\n        actives[2].includes(iz);\n}\n\nconst getPosStyle = (ix, iy, iz, nx, ny, nz, boxsize) => {\n    const x = ix - Math.floor(nx / 2);\n    const y = iy - Math.floor(ny / 2);\n    const z = iz - Math.floor(nz / 2);\n    return `left: ${x * boxsize}px;\n        top: ${y * boxsize}px;\n        transform: translateZ(${z * boxsize}px);`;\n};\n\nconst dispatcher = createEventDispatcher();\nonMount(() => dispatcher('mount'));\n</script>\n\n<div\n    class=\"matrix-wrapper\"\n    style=\"--scene-size: {boxsize * maxsize + 100};\">\n    <div class=\"relative\">\n        <div\n            on:mousedown\n            bind:this={scene}\n            class=\"scene absolute h-0 w-0\">\n        {#each Array(dataPadded.size[0]) as _, ix}\n            {#each Array(dataPadded.size[1]) as _, iy}\n                {#each Array(dataPadded.size[2]) as _, iz}\n                    <Box3d\n                        isPadding={isPadding(ix, iy, iz)}\n                        isActive={isActive(ix, iy, iz)}\n                        ix={ix}\n                        iy={iy}\n                        iz={iz}\n                        type={type}\n                        data={showData ? dataPadded.data[ix][iy][iz]: ''}\n                        posStyle={getPosStyle(\n                            ix, iy, iz,\n                            dataPadded.size[0], dataPadded.size[1], dataPadded.size[2],\n                            boxsize\n                        )}\n                        on:activate\n                        on:deactivate\n                        size={boxsize} />\n                {/each}\n            {/each}\n        {/each}\n        </div>\n    </div>\n</div>\n\n{#if showData && type === 'kernel'}\n<Icon class=\"cursor-pointer\">clear</Icon>\n\n<div\n    class=\"matrix-wrapper\"\n    style=\"--scene-size: {boxsize * maxsize + 100};\">\n    <div class=\"relative\">\n        <div\n            on:mousedown\n            bind:this={scene2}\n            class=\"scene absolute h-0 w-0\">\n        {#each Array(dataPadded.size[0]) as _, ix}\n            {#each Array(dataPadded.size[1]) as _, iy}\n                {#each Array(dataPadded.size[2]) as _, iz}\n                    <Box3d\n                        type=\"input\"\n                        data={inputData && inputData.data[ix][iy][iz]}\n                        posStyle={getPosStyle(\n                            ix, iy, iz,\n                            dataPadded.size[0], dataPadded.size[1], dataPadded.size[2],\n                            boxsize\n                        )}\n                        size={boxsize} />\n                {/each}\n            {/each}\n        {/each}\n        </div>\n    </div>\n</div>\n\n<Icon class=\"cursor-pointer\">drag_handle</Icon>\n\n<div class=\"matrix-wrapper\"\n    style=\"--scene-size: {boxsize * 1 + 100};\">\n    <div class=\"relative\">\n        <div\n            on:mousedown\n            bind:this={scene3}\n            class=\"scene absolute h-0 w-0\">\n            <Box3d\n                type='output'\n                ix={0}\n                iy={0}\n                iz={0}\n                posStyle={getPosStyle(\n                    0,0,0,1,1,1,\n                    boxsize\n                )}\n                data={outputData}\n                size={boxsize} />\n        </div>\n    </div>\n</div>\n{/if}\n\n<style>\n.matrix-wrapper, .relative {\n    min-width: calc(var(--scene-size) * 1px);\n    min-height: calc(var(--scene-size) * 1px);\n}\n.scene {\n    top: 50%;\n    left: 50%;\n    transform-style: preserve-3d;\n    transform-origin: center center;\n}\n</style>\n","<script>\n\nimport MatrixDrawer2d from './MatrixDrawer2d.svelte';\nimport MatrixDrawer3d from './MatrixDrawer3d.svelte';\n\n// The type: kernel/input/output\nexport let type;\n// The active boxes\nexport let actives;\n\nexport let showData;\n\nexport let data; // input/kernel\nexport let inputData;\nexport let outputData;\n\nexport let scene;\nexport let scene2;\nexport let scene3;\n</script>\n\n{#if data.size.length < 3}\n<MatrixDrawer2d {...$$props}\n    bind:scene={scene}\n    on:activate\n    on:deactivate />\n{:else}\n<MatrixDrawer3d\n    showData={showData}\n    type={type}\n    actives={actives}\n    data={data}\n    inputData={inputData}\n    outputData={outputData}\n    bind:scene={scene}\n    bind:scene2={scene2}\n    bind:scene3={scene3}\n    on:mousedown\n    on:mount\n    on:activate\n    on:deactivate />\n{/if}\n","<script>\nimport Image from 'smelte/src/components/Image';\nimport Container from './Container.svelte';\nimport MatrixDrawer from './drawings/MatrixDrawer.svelte';\n\nexport let kernel;\nexport let visual;\nexport let showData;\nexport let scene;\nexport let scene2;\nexport let scene3;\nexport let inputData;\nexport let outputData;\n\n</script>\n\n<Container>\n    <div slot=\"title\">\n        Kernel [{kernel.size}]\n    </div>\n    <div slot=\"content\" class=\"text-center\">\n        <div class=\"inline-flex align-items-center\">\n        {#if visual}\n            <MatrixDrawer\n                showData={showData}\n                type=\"kernel\"\n                data={kernel}\n                inputData={inputData}\n                outputData={outputData}\n                bind:scene={scene}\n                bind:scene2={scene2}\n                bind:scene3={scene3}\n                on:mount\n                on:mousedown />\n        {:else}\n                <Image\n                    src=\"https://via.placeholder.com/400x100.png?text=Visualization+disabled.\"\n                    alt=\"Visualization disabled.\" />\n        {/if}\n        </div>\n    </div>\n</Container>\n\n<style>\n.align-items-center {\n    align-items: center;\n}\n</style>\n","<script>\nimport Image from 'smelte/src/components/Image';\nimport Container from './Container.svelte';\nimport MatrixDrawer from './drawings/MatrixDrawer.svelte';\n\nexport let input;\nexport let visual;\nexport let showData;\nexport let actives;\nexport let scene\n</script>\n\n<Container>\n    <div slot=\"title\">\n        Input [{input.size}]\n    </div>\n    <div slot=\"content\" class=\"text-center\">\n    {#if visual}\n        <MatrixDrawer\n            showData={showData}\n            actives={actives}\n            bind:scene={scene}\n            data={input}\n            on:activate\n            on:deactivate\n            on:mousedown\n            on:mount\n            type=\"input\" />\n    {:else}\n        <Image\n            src=\"https://via.placeholder.com/300x300.png?text=Visualization+disabled.\"\n            alt=\"Visualization disabled.\" />\n    {/if}\n    </div>\n</Container>\n","<script>\nimport Image from 'smelte/src/components/Image';\nimport Container from './Container.svelte';\nimport MatrixDrawer from './drawings/MatrixDrawer.svelte';\n\nexport let output;\nexport let visual;\nexport let showData;\nexport let actives;\nexport let scene;\n</script>\n\n<Container>\n    <div slot=\"title\">\n        Output [{output.size}]\n    </div>\n    <div slot=\"content\" class=\"text-center\">\n    {#if visual}\n        <MatrixDrawer\n            showData={showData}\n            actives={actives}\n            bind:scene={scene}\n            data={output}\n            on:activate\n            on:deactivate\n            on:mousedown\n            on:mount\n            type=\"output\" />\n    {:else}\n        <Image\n            src=\"https://via.placeholder.com/300x300.png?text=Visualization+disabled.\"\n            alt=\"Visualization disabled.\" />\n    {/if}\n    </div>\n</Container>\n","<script>\nimport { Snackbar } from 'smelte';\nimport { incrToCoords } from './math.js';\nimport Header from \"./components/Header.svelte\";\nimport Settings from \"./components/Settings.svelte\";\nimport Kernel from \"./components/Kernel.svelte\";\nimport Input from \"./components/Input.svelte\";\nimport Output from \"./components/Output.svelte\";\nimport {\n\tdefaultSettings,\n\tcopySettings\n} from \"./settings.js\";\n\nlet settings = \tcopySettings(defaultSettings);\n// The default angle for the cube view\nconst defaultAngle = 30;\n\n$: dims = settings.dims[settings.dimty];\n\n$: convoluted = dims.input.data.conv(\n\tdims.input.padding,\n\tdims.kernel.data,\n\tdims.kernel.dilation,\n\tdims.kernel.stride\n);\n\nlet inActives;\nlet outActives;\n\n$: activateOutput = (coord) => {\n\toutActives = coord.map(co => [co]);\n\tinActives = convoluted.inCoordsToBlockIndexes(\n\t\tconvoluted.outCoordsToIn(coord), false\n\t);\n};\n\n$: activateInput = (coord) => {\n\tconst outCoord = convoluted.inCoordsToOut(coord);\n\toutActives = outCoord.map(co => [co]);\n\tactivateOutput(outCoord);\n};\n\nconst activateInputBox = (event) => {\n\tactivateInput(event.detail.coord);\n\tif (settings.autoWalker) {\n\t\t// this triggers autoWalker to be changed.\n\t\t// even when it is already false\n\t\tsettings.autoWalker = false;\n\t}\n};\n\nconst activateOutputBox = (event) => {\n\tactivateOutput(event.detail.coord);\n\tif (settings.autoWalker) {\n\t\tsettings.autoWalker = false;\n\t}\n}\n\nconst deactivate = () => {\n\tinActives = undefined;\n\toutActives = undefined;\n};\n\n// autoWalker\nlet interval;\n\n// $ runs twice\n// see: https://github.com/sveltejs/svelte/issues/4265\nlet autoWalkerChangeCount = 1;\n$: {\n\t//++autoWalkerChangeCount;\n\tif (autoWalkerChangeCount % 2 === 1) {\n\t\tif (settings.autoWalker && !!!interval) {\n\t\t\tlet walkIndex = -1;\n\t\t\tinterval = setInterval(() => {\n\t\t\t\tconst coord = incrToCoords(walkIndex, convoluted.output.size);\n\t\t\t\tactivateOutput(coord);\n\t\t\t\twalkIndex ++;\n\t\t\t}, 600);\n\t\t} else if (!settings.autoWalker && interval > 0) {\n\t\t\tclearInterval(interval);\n\t\t\tinterval = undefined;\n\t\t\tdeactivate();\n\t\t}\n\t}\n}\n\n// 3d view controls\nlet sceneKernel;\nlet sceneKernelInput;\nlet sceneKernelOutput;\nlet sceneInput;\nlet sceneOutput;\nlet controlStart = false;\nlet winHeight;\nlet winWidth;\n\n$: rotateScene = (newX, newY) => {\n    sceneKernel.style.transform =\n        'rotateY('+ newY +'deg) rotateX('+ newX +'deg)';\n    sceneInput.style.transform =\n        'rotateY('+ newY +'deg) rotateX('+ newX +'deg)';\n    sceneOutput.style.transform =\n        'rotateY('+ newY +'deg) rotateX('+ newX +'deg)';\n\tif (sceneKernelInput)\n\t\tsceneKernelInput.style.transform =\n\t\t\t'rotateY('+ newY +'deg) rotateX('+ newX +'deg)';\n\tif (sceneKernelOutput)\n\t\tsceneKernelOutput.style.transform =\n\t\t\t'rotateY('+ newY +'deg) rotateX('+ newX +'deg)';\n};\n\n// if winHeight/winWidth changes\n$: sceneControl = (event) => {\n\tif (!controlStart) return;\n\n\tconst cursorX = event.pageX,\n\t\tcursorY = event.pageY,\n\t\tnewRotationX = 180 - 360*cursorY / winHeight,\n\t\tnewRotationY = -(180 - 360*cursorX / winWidth);\n\n\trotateScene(newRotationX, newRotationY);\n};\n\n$: resetControl = () => {\n\trotateScene(defaultAngle, 90 + defaultAngle);\n};\n\n</script>\n\n<svelte:window\n\ton:mouseup={() => controlStart = false}\n    on:mousemove={sceneControl}\n\tbind:innerWidth={winWidth}\n\tbind:innerHeight={winHeight}\n\t/>\n\n<main class=\"bg-gray-200\">\n\t<div class=\"grid-container\">\n\t\t<div class=\"header-cell mb-3 bg-primary-900\">\n\t\t\t<Header />\n\t\t</div>\n\t\t<div class=\"settings-cell bg-white border rounded-l-md border-gray-300 ml-3 mb-3 mr-1\">\n\t\t\t<Settings\n\t\t\t\tbind:settings={settings}\n\t\t\t\tbind:controlStart={controlStart}\n\t\t\t\ton:viewReset={resetControl} />\n\t\t</div>\n\t\t<div class=\"kernel-cell bg-white border rounded-tr-md border-gray-300 mr-3\">\n\t\t\t<Kernel\n\t\t\t\tkernel={dims.kernel}\n\t\t\t\tvisual={settings.visual}\n\t\t\t\tshowData={settings.showData}\n\t\t\t\tinputData={inActives && dims.input.data.pad(dims.input.padding).subset(inActives)}\n\t\t\t\toutputData={outActives && convoluted.output.subset(outActives).first()}\n\t\t\t\tbind:scene={sceneKernel}\n\t\t\t\tbind:scene2={sceneKernelInput}\n\t\t\t\tbind:scene3={sceneKernelOutput}\n\t\t\t\ton:mount={resetControl}\n\t\t\t\ton:mousedown={() => controlStart = true} />\n\t\t</div>\n\t\t<div class=\"input-cell bg-white border border-gray-300 mb-3\">\n\t\t\t<Input\n\t\t\t\tinput={dims.input}\n\t\t\t\tvisual={settings.visual}\n\t\t\t\tshowData={settings.showData}\n\t\t\t\tactives={inActives}\n\t\t\t\ton:activate={activateInputBox}\n\t\t\t\ton:deactivate={deactivate}\n\t\t\t\tbind:scene={sceneInput}\n\t\t\t\ton:mount={resetControl}\n\t\t\t\ton:mousedown={() => controlStart = true} />\n\t\t</div>\n\t\t<div class=\"output-cell bg-white border rounded-br-md border-gray-300 mr-3 mb-3\">\n\t\t\t<Output\n\t\t\t\toutput={{data: convoluted.output, size: convoluted.output.size}}\n\t\t\t\tvisual={settings.visual}\n\t\t\t\tshowData={settings.showData}\n\t\t\t\tactives={outActives}\n\t\t\t\ton:activate={activateOutputBox}\n\t\t\t\ton:deactivate={deactivate}\n\t\t\t\tbind:scene={sceneOutput}\n\t\t\t\ton:mount={resetControl}\n\t\t\t\ton:mousedown={() => controlStart = true} />\n\t\t</div>\n\t</div>\n</main>\n<Snackbar\n  noAction\n  color=\"alert\"\n  hash=\"autoWalker\"\n  timeout={2000}\n  class=\"pointer-events-auto flex absolute py-2 text-sm\n         px-4 z-30 mb-4 content-between mx-auto\n         rounded items-center elevation-2\"\n  left\n  value={!settings.autoWalker}>\n  <div>autoWalker stopped!</div>\n</Snackbar>\n\n<style>\n.grid-container {\n\tdisplay: grid;\n\theight: 100vh;\n\tgrid-gap: 2px;\n\tgrid-template-columns: 360px 1fr 1fr;\n\tgrid-template-rows: max-content max-content auto;\n\tgrid-template-areas:\n\t\t\"header-cell header-cell header-cell\"\n\t\t\"settings-cell kernel-cell kernel-cell\"\n\t\t\"settings-cell input-cell output-cell\";\n}\n\n\n.grid-container > .header-cell {\n\tgrid-area: header-cell;\n}\n\n.grid-container > .settings-cell {\n\tgrid-area: settings-cell;\n}\n\n.grid-container > .kernel-cell {\n\tgrid-area: kernel-cell;\n}\n\n.grid-container > .input-cell {\n\tgrid-area: input-cell;\n}\n\n.grid-container > .output-cell {\n\tgrid-area: output-cell;\n}\n</style>","import \"smelte/src/tailwind.css\";\nimport App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","null_to_empty","value","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_input_value","input","set_style","important","setProperty","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_out_transition","group","reset","get_spread_update","levels","updates","to_null_out","accounted_for","n","bind","index","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","splice","$$props","obj","$$set","keys","class","small","xs","reverse","tip","color","noDepth","getClass","prop","depth","defaultDepth","includes","utils","bg","border","txt","caret","ClassBuilder","classes","defaultClasses","defaults","cond","reduce","acc","replace","RegExp","cur","className","defaultValue","defaultReserved","centered","onMouseDown","currentTarget","circle","clientWidth","clientHeight","removeCircle","remove","width","height","rect","getBoundingClientRect","left","clientX","top","clientY","ripple","onDestroy","classesDefault","basicDefault","outlinedDefault","textDefault","iconDefault","fabDefault","smallDefault","disabledDefault","elevationDefault","outlined","disabled","icon","light","dark","flat","iconClass","href","fab","basicClasses","outlinedClasses","textClasses","iconClasses","fabClasses","smallClasses","disabledClasses","elevationClasses","basic","elevation","iClasses","shade","iconCb","createRipple","reserved","filterProps","normal","lighter","get","cubicOut","quadIn","quadOut","fade","linear","getComputedStyle","opacity","scale","start","target_opacity","transform","sd","od","_t","u","inProps","outProps","Scrim","Spacer","titleClassesDefault","actionsClassesDefault","titleClasses","actionsClasses","persistent","transitionProps","tcb","acb","offset","throttle","once","threshold","visible","wasVisible","intersecting","removeHandlers","callEvents","observer","IntersectionObserver","IntersectionObserverEntry","isIntersecting","rootMargin","observe","unobserve","checkIsVisible","offsetWidth","offsetHeight","getClientRects","defaultBoundingClientRect","windowInnerHeight","innerHeight","documentElement","throttled","time","last","deferTimer","clearTimeout","setTimeout","throttleFn","alt","thumbnail","loaded","loading","img","Image","onload","subscriber_queue","noHover","hoverClass","label","min","getColor","getPropertyValue","c1","c2","queue","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","writable","wrapperDefault","timeout","bottom","right","noAction","wrapperCb","tm","wClasses","btoa","valueOf","toggler","id","$queue","shift","trackClassesDefault","thumbClassesDefault","labelClassesDefault","trackClasses","thumbClasses","labelClasses","trcb","thcb","lcb","tr","th","debounce","func","immediate","args","arguments","later","apply","callNow","show","delayHide","delayShow","prod","array","y","range","incrToCoords","incr","coords","restSize","floor","sizeCheck","Matrix","num","preset","random","randInt","strdata","line","trim","parseInt","isNaN","elem","coord","subset","first","reshape","indexes","_","dat","j","da","inplace","mdata","toString","newdata","JSON","parse","stringify","idx","idx1","i1","idx2","i2","idx3","i3","padding","newsize","zeros","replaceSize","shape","flatten","dilation","dsize","replaceIndexes","other","elem1","elem2","callFunc","z","copy","kernel","stride","Convolution","concat","d2","sum","pad","dilate","outSize","output","_convolute","inblock","inCoordsToBlockIndexes","outCoordsToIn","mulsum","withAll","inStarts","inCoordsToOut","ks","ceil","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","validate","uuid","REGEX","test","byteToHex","substr","v4","buf","rnds","arr","toLowerCase","TypeError","uuidv4","select","errorMsg","bindVal","baseClasses","hovered","error","Number","keyCode","valueMinus","dispatcher","copySettings","orig","val","constructor","defaultSettings","autoWalker","visual","showData","dimty","dims","1","2","3","dataInput","dataType","dataErrorMsg","settings","controlStart","kernelType","showDataDialog","dataError","randomDataUpdate","saveData","textarea","fromString","total","randomDataToTextarea","resize","irow","icol","isPadding","isActive","sizeClasses","typeClasses","activeClasses","actives","inputData","outputData","dataPadded","dataPaddedSize","maxsize","boxsize","ix","iy","iz","posStyle","scene","scene2","scene3","nx","ny","nz","spread_props","inActives","outActives","deactivate","interval","sceneKernel","sceneKernelInput","sceneKernelOutput","sceneInput","sceneOutput","winHeight","winWidth","convoluted","conv","activateOutput","co","activateInput","outCoord","walkIndex","setInterval","clearInterval","rotateScene","newX","newY","sceneControl","cursorX","pageX","cursorY","pageY","resetControl","body"],"mappings":"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"}